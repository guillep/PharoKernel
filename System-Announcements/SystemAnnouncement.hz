Class
	name: #SystemAnnouncement;
	superclass: #ClassAnnouncement;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #(#timeStamp );
	classVariables: #();
	package: #'System-Announcements'.

Class SystemAnnouncement >> initialize
[
super initialize.self setTimeStamp
]

Class SystemAnnouncement >> setTimeStamp
[
timeStamp := TimeStamp current
]

Class SystemAnnouncement >> timeStamp
[
^ timeStamp
]

Class SystemAnnouncement >> timeStamp: aTimeStamp
[
timeStamp := aTimeStamp
]

Metaclass
	name: #SystemAnnouncement;
	instanceVariables: #().

Metaclass SystemAnnouncement >> fromInternal: anInternalAnnouncement
[
	"create a new announcement from an internal announcement. Copy the variables"
| instance |self flag: #ben.	"why copy does not work?"instance := self new.1 to: self allInstVarNames size do: [ :i | instance instVarAt: i put: (anInternalAnnouncement instVarAt: i) ].^ instance
]


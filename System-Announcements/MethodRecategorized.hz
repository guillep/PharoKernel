Class
	name: #MethodRecategorized;
	superclass: #ClassSystemAnnouncement;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #(#methodClass #methodRecategorized #newProtocol #oldProtocol #selector );
	classVariables: #();
	package: #'System-Announcements'.

Class MethodRecategorized >> methodClass: anObject
[
methodClass := anObject
]

Class MethodRecategorized >> selector: anObject
[
selector := anObject
]

Class MethodRecategorized >> selector
[
^ selector
]

Class MethodRecategorized >> oldProtocol
[
^ oldProtocol
]

Class MethodRecategorized >> newProtocol: anObject
[
newProtocol := anObject
]

Class MethodRecategorized >> methodClass
[
^ methodClass
]

Class MethodRecategorized >> methodRecategorized
[
^ methodRecategorized
]

Class MethodRecategorized >> oldProtocol: anObject
[
oldProtocol := anObject
]

Class MethodRecategorized >> methodAffected
[
^ self methodRecategorized
]

Class MethodRecategorized >> newProtocol
[
^ newProtocol
]

Class MethodRecategorized >> methodRecategorized: anObject
[
methodRecategorized := anObject
]

Metaclass
	name: #MethodRecategorized;
	instanceVariables: #().

Metaclass MethodRecategorized >> method: aCompiledMethod selector: aSelector class: aClass newProtocol: aNewProtocol oldProtocol: anOldProtocol
[
^ self new	methodRecategorized: aCompiledMethod;	selector: aSelector;	methodClass: aClass;	newProtocol: aNewProtocol;	oldProtocol: anOldProtocol;	yourself
]

tegorized;
	instanceVariables: #().

Metaclass MethodRecategorized >> method: aCompiledMethod selector: aSelector class: aClass newProtocol: aNewProtocol oldProtocol: anOldProtocol
[
^ self new	methodRecategorized: aCompiledMethod;	selector: aSelector;	methodClass: aClass;	newProtocol: aNewProtocol;	oldProtocol: anOldProtocol;	yourself
]


Class
	name: #FLTraitCluster;
	superclass: #ClassFLBehaviorCluster;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #();
	classVariables: #();
	package: #'FuelMetalevel-Clusters'.

Class FLTraitCluster >> referencesOf: aTrait do: aBlock
[
super referencesOf: aTrait do: aBlock.aBlock value: aTrait classSide.aBlock value: aTrait basicEnvironment.aBlock value: aTrait category.aBlock value: aTrait name
]

Class FLTraitCluster >> materializePostInstance: aTrait with: aDecoder
[
| classTrait category name environment |classTrait := aDecoder nextEncodedReference.category := aDecoder nextEncodedReference.name := aDecoder nextEncodedReference.environment := aDecoder nextEncodedReference.aTrait	initialize;	name: name;	basicCategory: category asSymbol;	classTrait: classTrait;	environment: environment.classTrait baseTrait: aTrait
]

Class FLTraitCluster >> serializePostInstance: aTrait with: anEncoder
[
anEncoder encodeReferenceTo: aTrait classSide.	"Do not use #basicCategory because since it may be lazily computed it may happen that it is still in nil. "anEncoder encodeReferenceTo: aTrait category.anEncoder encodeReferenceTo: aTrait name.anEncoder encodeReferenceTo: aTrait basicEnvironment
]

Class FLTraitCluster >> materializeInstanceWith: aDecoder
[
^ Trait basicNew
]

Class FLTraitCluster >> serializeInstancesStepWith: anEncoder
[
	"Do nothing. I know my objects have nothing to serialize in this step."

]

Metaclass
	name: #FLTraitCluster;
	instanceVariables: #().

Metaclass FLTraitCluster >> clusterBucketIn: aClusterization
[
^ aClusterization metalevelInstanceSideBucket
]


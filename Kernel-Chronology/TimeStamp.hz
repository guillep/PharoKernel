Class
	name: #TimeStamp;
	superclass: #ClassDateAndTime;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #();
	classVariables: #();
	package: #'Kernel-Chronology'.

Class TimeStamp >> minusDays: anInteger
[
	"Answer a TimeStamp which is anInteger days before the receiver."
^ self - anInteger days
]

Class TimeStamp >> dateAndTime
[
	"Answer a two element Array containing the receiver's date and time."
^ Array with: self date with: self time
]

Class TimeStamp >> printOn: aStream
[
	"Print receiver's date and time on aStream."
aStream	nextPutAll: self date printString;	space;	nextPutAll: self time printString
]

Class TimeStamp >> asTimeStamp
[
	"Answer the receiver as an instance of TimeStamp."
^ self
]

Class TimeStamp >> plusSeconds: anInteger
[
	"Answer a TimeStamp which is anInteger number of seconds after the receiver."
^ self + anInteger seconds
]

Class TimeStamp >> minusSeconds: anInteger
[
	"Answer a TimeStamp which is anInteger number of seconds before the receiver."
^ self - anInteger seconds
]

Class TimeStamp >> time
[
	"Answer the time of the receiver."
^ self asTime
]

Class TimeStamp >> date
[
	"Answer the date of the receiver."
^ self asDate
]

Class TimeStamp >> species
[
^ DateAndTime
]

Class TimeStamp >> storeOn: aStream
[
aStream	nextPut: $';	print: self;	nextPut: $';	nextPutAll: ' asTimeStamp'
]

Class TimeStamp >> plusDays: anInteger
[
	"Answer a TimeStamp which is anInteger days after the receiver."
^ self + anInteger days
]

Metaclass
	name: #TimeStamp;
	instanceVariables: #().

Metaclass TimeStamp >> readFrom: stream
[
| date time |stream skipSeparators.date := Date readFrom: stream.stream skipSeparators.time := Time readFrom: stream.^ self date: date time: time
]

Metaclass TimeStamp >> now
[
	"Answer the current date and time as a TimeStamp."
^ self current
]

Metaclass TimeStamp >> fromMethodTimeStamp: aString
[
| stream |(stream := aString readStream)	skipSeparators;	skipTo: Character space.^ self readFrom: stream
]

Metaclass TimeStamp >> current
[
| ts ticks |ts := super now.ticks := ts ticks.ticks at: 3 put: 0.ts ticks: ticks offset: ts offset.^ ts
]


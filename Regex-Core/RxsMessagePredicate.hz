Class
	name: #RxsMessagePredicate;
	superclass: #ClassRxsNode;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #(#selector #negated );
	classVariables: #();
	package: #'Regex-Core'.

Class RxsMessagePredicate >> initializeSelector: aSelector
[
	"The selector must be a one-argument message understood by Character."
selector := aSelector
]

Class RxsMessagePredicate >> initializeSelector: aSelector negated: aBoolean
[
	"The selector must be a one-argument message understood by Character."
selector := aSelector.negated := aBoolean
]

Class RxsMessagePredicate >> selector
[
^ selector
]

Class RxsMessagePredicate >> negated
[
^ negated
]

Class RxsMessagePredicate >> dispatchTo: aBuilder
[
	"Inform the matcher of the kind of the node, and it	will do whatever it has to."
^ aBuilder syntaxMessagePredicate: self
]

Metaclass
	name: #RxsMessagePredicate;
	instanceVariables: #().


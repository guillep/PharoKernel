Class
	name: #DefaultExternalDropHandler;
	superclass: #ClassObject;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #();
	classVariables: #();
	package: #'System-Support'.

Class DefaultExternalDropHandler >> chooseServiceFrom: aCollection
[
	"private - choose a service from aCollection asking the user if  	needed"
aCollection size = 1	ifTrue: [ ^ aCollection anyOne ].^ UIManager default chooseFrom: (aCollection collect: [ :each | each label ]) values: aCollection
]

Class DefaultExternalDropHandler >> servicesForFileNamed: aString
[
	"private - answer a collection of file-services for the file named  	aString"
| allServices |allServices := FileServices itemsForFile: aString.^ allServices reject: [ :svc | self unwantedSelectors includes: svc selector ]
]

Class DefaultExternalDropHandler >> unwantedSelectors
[
	"private - answer a collection well known unwanted selectors "
^ #(#removeLineFeeds: #addFileToNewZip: #compressFile: #putUpdate:)
]

Metaclass
	name: #DefaultExternalDropHandler;
	instanceVariables: #().

Metaclass DefaultExternalDropHandler >> initialize
[
	"initialize the receiver"
ExternalDropHandler defaultHandler: self new
]

Metaclass DefaultExternalDropHandler >> unload
[
	"initialize the receiver"
ExternalDropHandler defaultHandler: nil
]


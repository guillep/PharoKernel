Class
	name: #FLGlobalCluster;
	superclass: #ClassFLPrimitiveCluster;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #();
	classVariables: #();
	package: #'Fuel-Clusters'.

Class FLGlobalCluster >> materializeGlobalAssociationFrom: aDecoder
[
| globalName |globalName := aDecoder nextEncodedString asSymbol.^ Smalltalk globals associationAt: globalName ifAbsent: [ FLGlobalNotFound signalWithName: globalName ]
]

Class FLGlobalCluster >> materializeGlobalClassFrom: aDecoder
[
| className |className := aDecoder nextEncodedString asSymbol.^ aDecoder classNamed: className
]

Class FLGlobalCluster >> serializeGlobalAssociationKeyed: aSymbol on: anEncoder
[
anEncoder encodeString: aSymbol
]

Class FLGlobalCluster >> serializeGlobalClass: aClass on: anEncoder
[
aClass isObsolete	ifTrue: [ FLObsolete signalWithName: aClass name ].anEncoder encodeString: aClass name
]

Metaclass
	name: #FLGlobalCluster;
	instanceVariables: #().

Metaclass FLGlobalCluster >> clusterBucketIn: aClusterization
[
^ aClusterization globalsBucket
]


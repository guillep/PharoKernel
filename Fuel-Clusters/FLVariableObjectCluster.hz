Class	name: #FLVariableObjectCluster;	superclass: #ClassFLPointerObjectCluster;	instanceSpecification: #(#pointers #words );	instanceVariables: #();	classVariables: #();	package: #'Fuel-Clusters'.Class FLVariableObjectCluster >> referencesOf: anObject do: aBlock[super referencesOf: anObject do: aBlock.self variablePartReferencesOf: anObject do: aBlock]Class FLVariableObjectCluster >> serializeInstance: anObject with: anEncoder[anEncoder encodePositiveInteger: anObject basicSize]Class FLVariableObjectCluster >> variablePartReferencesOf: anObject do: aBlock[1 to: anObject basicSize do: [ :index | aBlock value: (anObject basicAt: index) ]]Class FLVariableObjectCluster >> serializeReferencesVariablePartOf: anObject with: anEncoder[1 to: anObject basicSize do: [ :index | anEncoder encodeReferenceTo: (anObject basicAt: index) ]]Class FLVariableObjectCluster >> materializeReferencesOf: anObject with: aDecoder[super materializeReferencesOf: anObject with: aDecoder.self materializeReferencesVariablePartOf: anObject with: aDecoder]Class FLVariableObjectCluster >> materializeInstanceWith: aDecoder[^ theClass basicNew: aDecoder nextEncodedPositiveInteger]Class FLVariableObjectCluster >> serializeReferencesOf: anObject with: anEncoder[super serializeReferencesOf: anObject with: anEncoder.self serializeReferencesVariablePartOf: anObject with: anEncoder]Class FLVariableObjectCluster >> materializeReferencesVariablePartOf: anObject with: aDecoder[1 to: anObject basicSize do: [ :index | anObject basicAt: index put: aDecoder nextEncodedReference ]]Metaclass	name: #FLVariableObjectCluster;	instanceVariables: #().
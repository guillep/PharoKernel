Class	name: #PlatformResolver;	superclass: #ClassFileSystemResolver;	instanceSpecification: #(#pointers #words );	instanceVariables: #();	classVariables: #();	package: #'FileSystem-Core-Implementation'.Class PlatformResolver >> supportedOrigins[^ #(#home #desktop #documents #preferences)]Class PlatformResolver >> documents[^ self subclassResponsibility]Class PlatformResolver >> home[^ self subclassResponsibility]Class PlatformResolver >> desktop[^ self subclassResponsibility]Class PlatformResolver >> preferences[^ self subclassResponsibility]Metaclass	name: #PlatformResolver;	instanceVariables: #().Metaclass PlatformResolver >> primitiveGetUntrustedUserDirectory[	<primitive: 'primitiveGetUntrustedUserDirectory' module: 'SecurityPlugin'>self primitiveFailed.self flag: 'use a more decent way to get a path in the users home directory']Metaclass PlatformResolver >> forCurrentPlatform[| platformName |platformName := Smalltalk os platformName.^ (self allSubclasses detect: [ :ea | ea platformName = platformName ]) new]Metaclass PlatformResolver >> platformName[^ nil]
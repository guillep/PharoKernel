Class	name: #FileSystemGuide;	superclass: #ClassObject;	instanceSpecification: #(#pointers #words );	instanceVariables: #(#visitor #work );	classVariables: #();	package: #'FileSystem-Core-Implementation'.Class FileSystemGuide >> push: anObject[work add: anObject]Class FileSystemGuide >> initializeWithVisitor: aVisitor[self initialize.visitor := aVisitor]Class FileSystemGuide >> pop[^ work removeLast]Class FileSystemGuide >> top[^ work removeFirst]Class FileSystemGuide >> pushAll: aCollection[aCollection do: [ :ea | self push: ea ]]Class FileSystemGuide >> show: aReference[self subclassResponsibility]Class FileSystemGuide >> whileNotDoneDo: aBlock[[ work isEmpty ] whileFalse: [ aBlock value ]]Class FileSystemGuide >> initialize[super initialize.work := OrderedCollection new]Metaclass	name: #FileSystemGuide;	instanceVariables: #().Metaclass FileSystemGuide >> show: aReference to: aVisitor[^ (self for: aVisitor) show: aReference]Metaclass FileSystemGuide >> for: aVisitor[^ self basicNew initializeWithVisitor: aVisitor]
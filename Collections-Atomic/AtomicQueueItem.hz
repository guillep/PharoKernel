Class
	name: #AtomicQueueItem;
	superclass: #ClassObject;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #(#next #object );
	classVariables: #();
	package: #'Collections-Atomic'.

Class AtomicQueueItem >> next
[
	"Answer the value of next"
^ next
]

Class AtomicQueueItem >> makeCircular
[
	"Make a receiver circular, i.e. point to itself,	answer the old value of next variable. 	Note, this operation should be atomic"
| temp |" atomic swap here"temp := next.next := self.^ temp
]

Class AtomicQueueItem >> initialize
[
	"make circular"
super initialize.next := self
]

Class AtomicQueueItem >> object
[
	"Answer the value of object"
^ object
]

Class AtomicQueueItem >> object: anObject
[
	"Set the value of object"
object := anObject
]

Class AtomicQueueItem >> next: anObject
[
	"Set the value of next"
next := anObject
]

Class AtomicQueueItem >> isCircular
[
^ next == self
]

Metaclass
	name: #AtomicQueueItem;
	instanceVariables: #().


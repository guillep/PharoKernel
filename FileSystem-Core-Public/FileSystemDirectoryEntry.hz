Class	name: #FileSystemDirectoryEntry;	superclass: #ClassObject;	instanceSpecification: #(#pointers #words );	instanceVariables: #(#reference #creation #modification #isDirectory #isSymlink #size #posixPermissions );	classVariables: #();	package: #'FileSystem-Core-Public'.Class FileSystemDirectoryEntry >> modification[^ self modificationTime]Class FileSystemDirectoryEntry >> asReference[self deprecated: 'Use #asFileReference instead' on: '12 April 2012' in: 'Pharo 1.4'.^ self asFileReference]Class FileSystemDirectoryEntry >> creationTime[	"Return the creation date and time of the entry receiver."^ creation]Class FileSystemDirectoryEntry >> modificationSeconds[	"Return the modification date and time of the entry receiver in seconds."^ modification]Class FileSystemDirectoryEntry >> basename[^ reference basename]Class FileSystemDirectoryEntry >> creation[^ self creationTime]Class FileSystemDirectoryEntry >> fullName[^ reference fullName]Class FileSystemDirectoryEntry >> creationSeconds[	"Return the creation date and time of the entry receiver in seconds."^ creation]Class FileSystemDirectoryEntry >> permissions[^ self posixPermissions ifNotNil: [ FileSystemPermission posixPermissions: self posixPermissions ]]Class FileSystemDirectoryEntry >> extension[^ reference extension]Class FileSystemDirectoryEntry >> writeStream[^ reference writeStream]Class FileSystemDirectoryEntry >> initializeWithRef: ref creation: cTime modification: mTime isDir: directoryBoolean size: bytes posixPermissions: posixNumber isSymlink: symlinkBoolean[reference := ref.creation := cTime.modification := mTime.isDirectory := directoryBoolean.size := bytes.posixPermissions := posixNumber.isSymlink := symlinkBoolean]Class FileSystemDirectoryEntry >> posixPermissions[^ posixPermissions]Class FileSystemDirectoryEntry >> isSymlink[^ isSymlink]Class FileSystemDirectoryEntry >> asFileReference[^ reference]Class FileSystemDirectoryEntry >> pathSegments[^ reference pathSegments]Class FileSystemDirectoryEntry >> size[	"Returns the receiver size"^ size]Class FileSystemDirectoryEntry >> readStream[^ reference readStream]Class FileSystemDirectoryEntry >> reference[^ reference]Class FileSystemDirectoryEntry >> modificationTime[	"Return the modification date and time of the entry receiver."^ modification]Class FileSystemDirectoryEntry >> printOn: aStream[aStream nextPutAll: 'DirectoryEntry: '.reference ifNotNilDo: [ :ref | aStream nextPutAll: reference printString ]]Class FileSystemDirectoryEntry >> isFile[	"Return whether the receiver is a file"^ isDirectory not]Class FileSystemDirectoryEntry >> isDirectory[	"Return whether the receiver is a directory"^ isDirectory]Metaclass	name: #FileSystemDirectoryEntry;	instanceVariables: #().Metaclass FileSystemDirectoryEntry >> allPosixPermissions[^ 8r777]Metaclass FileSystemDirectoryEntry >> reference: ref creation: cTime modification: mTime isDir: aBoolean size: anInteger posixPermissions: posixNumber isSymlink: symlinkBoolean[	"Create a directory entry for the file reference ref, with the creation time, cTime, the modification time, mTime. aBoolean indicates if the entry represents a directory or a file of size given by anInteger"^ self basicNew	initializeWithRef: ref	creation: cTime	modification: mTime	isDir: aBoolean	size: anInteger	posixPermissions: posixNumber	isSymlink: symlinkBoolean]Metaclass FileSystemDirectoryEntry >> fileSystem: aFilesystem path: aPath creation: cTime modification: mTime isDir: aBoolean size: anInteger posixPermissions: posixNumber isSymlink: symlinkBooleam[	"Create a directory entry given a filesystem and a path in such filesystem. In addition, the creation and modification time are required as well as a boolean that indicates whether the entry is a folder or a file and its size."^ self	reference: (aFilesystem referenceTo: aPath)	creation: cTime	modification: mTime	isDir: aBoolean	size: anInteger	posixPermissions: posixNumber	isSymlink: symlinkBooleam]
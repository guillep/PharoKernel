Class	name: #FLOptimizedObjectCluster;	superclass: #ClassFLIteratingCluster;	instanceSpecification: #(#pointers #words );	instanceVariables: #();	classVariables: #();	package: #'Fuel-Clusters-Optionals'.Class FLOptimizedObjectCluster >> serializeReferencesStepWith: anEncoder[objects do: [ :anObject | self serializeReferencesOf: anObject with: anEncoder ]]Class FLOptimizedObjectCluster >> materializeReferencesOf: anObject with: aDecoder[	"Hook method"self subclassResponsibility]Class FLOptimizedObjectCluster >> materializeReferencesStepWith: aDecoder[objects do: [ :anObject | self materializeReferencesOf: anObject with: aDecoder ]]Class FLOptimizedObjectCluster >> serializeReferencesOf: anObject with: anEncoder[^ self subclassResponsibility]Class FLOptimizedObjectCluster >> serializeInstancesStepWith: anEncoder[	"Do nothing. I know my objects have nothing to serialize in this step."]Metaclass	name: #FLOptimizedObjectCluster;	instanceVariables: #().Metaclass FLOptimizedObjectCluster >> clusterBucketIn: aClusterization[^ aClusterization baselevelBucket]
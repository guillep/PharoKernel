Class
	name: #BlockStartLocator;
	superclass: #ClassInstructionClient;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #(#nextJumpIsAroundBlock );
	classVariables: #();
	package: #'Kernel-Methods'.

Class BlockStartLocator >> initialize
[
super initialize.nextJumpIsAroundBlock := false
]

Class BlockStartLocator >> jump: offset
[
	"If this jump is around a block answer the size of that block."
nextJumpIsAroundBlock	ifTrue: [ 		nextJumpIsAroundBlock := false.		^ offset ]
]

Class BlockStartLocator >> pushClosureCopyNumCopiedValues: numCopied numArgs: numArgs blockSize: blockSize
[
	"Answer the size of the block"
^ blockSize
]

Class BlockStartLocator >> send: selector super: supered numArgs: numberArguments
[
nextJumpIsAroundBlock := #closureCopy:copiedValues: == selector	"Don't use		nextJumpIsAroundBlock := #(blockCopy: closureCopy:copiedValues:) includes: selector	 since BlueBook BlockContexts do not have their own temps."
]

Metaclass
	name: #BlockStartLocator;
	instanceVariables: #().


Class
	name: #MethodModified;
	superclass: #ClassSystemAnnouncement;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #(#methodClass #newMethod #newProtocol #oldMethod #oldProtocol #selector );
	classVariables: #();
	package: #'System-Announcements'.

Class MethodModified >> methodAffected
[
^ self newMethod
]

Class MethodModified >> methodClass
[
^ methodClass
]

Class MethodModified >> methodClass: anObject
[
methodClass := anObject
]

Class MethodModified >> newMethod
[
^ newMethod
]

Class MethodModified >> newMethod: aCompiledMethod
[
newMethod := aCompiledMethod
]

Class MethodModified >> newProtocol
[
^ newProtocol
]

Class MethodModified >> newProtocol: anObject
[
newProtocol := anObject
]

Class MethodModified >> oldMethod
[
^ oldMethod
]

Class MethodModified >> oldMethod: aCompiledMethod
[
oldMethod := aCompiledMethod
]

Class MethodModified >> oldProtocol
[
^ oldProtocol
]

Class MethodModified >> oldProtocol: anObject
[
oldProtocol := anObject
]

Class MethodModified >> selector
[
^ selector
]

Class MethodModified >> selector: anObject
[
selector := anObject
]

Metaclass
	name: #MethodModified;
	instanceVariables: #().

Metaclass MethodModified >> methodChangedFrom: oldMethod to: newMethod selector: selector inClass: aClass oldProtocol: oldProtocol newProtocol: newProtocol requestor: aRequestor
[
^ self new	oldMethod: oldMethod;	newMethod: newMethod;	selector: selector;	methodClass: aClass;	oldProtocol: oldProtocol;	newProtocol: newProtocol;	yourself
]


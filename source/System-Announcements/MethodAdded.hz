MethodAdded
	superclass: #SystemAnnouncement;
	instanceVariables: #(#method #methodClass #protocol #selector );
	package: #'System-Announcements'.

MethodAdded >> method
method
	^ method

MethodAdded >> method: aCompiledMethod
method: aCompiledMethod
	method := aCompiledMethod

MethodAdded >> methodAffected
methodAffected
	^ self method

MethodAdded >> methodClass
methodClass
	^ methodClass

MethodAdded >> methodClass: aClass
methodClass: aClass
	methodClass := aClass

MethodAdded >> protocol
protocol
	^ protocol

MethodAdded >> protocol: aProtocolName
protocol: aProtocolName
	protocol := aProtocolName

MethodAdded >> selector
selector
	^ selector

MethodAdded >> selector: aSelector
selector: aSelector
	selector := aSelector

MethodAdded class >> method: aCompiledMethod selector: aSelector class: aClass
method: aCompiledMethod selector: aSelector class: aClass
	self flag: #look.	"Is it ok to send an event with no protocol?"
	^ self
		method: aCompiledMethod
		selector: aSelector
		protocol: nil
		class: aClass
		requestor: nil

MethodAdded class >> method: aCompiledMethod selector: aSelector protocol: aProtocolName class: aClass
method: aCompiledMethod selector: aSelector protocol: aProtocolName class: aClass
	self flag: #look.	"Is it ok to send an event with no requestor?"
	^ self
		method: aCompiledMethod
		selector: aSelector
		protocol: aProtocolName
		class: aClass
		requestor: nil

MethodAdded class >> method: aCompiledMethod selector: aSelector protocol: aProtocolName class: aClass requestor: aRequestor
method: aCompiledMethod selector: aSelector protocol: aProtocolName class: aClass requestor: aRequestor
	^ self new
		method: aCompiledMethod;
		selector: aSelector;
		protocol: aProtocolName;
		methodClass: aClass;
		yourself


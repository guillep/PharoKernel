TextKern
	superclass: #TextAttribute;
	instanceVariables: #(#kern #active );
	package: #'Text-Core'.

TextKern >> = other
[
	^ other class == self class and: [ other kern = kern ]
]

TextKern >> dominatedByCmd0
[
	"Cmd-0 should turn off kerning"

	^ true
]

TextKern >> dominates: other
[
	"NOTE: The use of active in this code is specific to its use in the method
		Text class addAttribute: att toArray: others"

	(active and: [ other class == self class and: [ other kern + kern = 0 ] ])
		ifTrue: [ active := false.
			^ true ].	"can only dominate once"
	^ false
]

TextKern >> emphasizeScanner: scanner
[
	"Augment (or diminish) the kerning offset for text display"

	scanner addKern: kern
]

TextKern >> hash
[
	"#hash is re-implemented because #= is re-implemented"

	^ kern hash
]

TextKern >> isKern
[
	^ true
]

TextKern >> kern
[
	^ kern
]

TextKern >> kern: kernValue
[
	kern := kernValue.
	self reset
]

TextKern >> reset
[
	active := true
]

TextKern >> set
[
	^ active
]

TextKern >> writeScanOn: strm
[
	kern > 0
		ifTrue: [ 1 to: kern do: [ :kk | strm nextPut: $+ ] ].
	kern < 0
		ifTrue: [ 1 to: 0 - kern do: [ :kk | strm nextPut: $- ] ]
]

TextKern class >> kern: kernValue
[
	^ self new kern: kernValue
]


TextFontChange
	superclass: #TextAttribute;
	instanceVariables: #(#fontNumber );
	package: #'Text-Core'.

TextFontChange >> = other
[
	^ other class == self class and: [ other fontNumber = fontNumber ]
]

TextFontChange >> dominates: other
[
	^ other isKindOf: TextFontChange
]

TextFontChange >> emphasizeScanner: scanner
[
	"Set the font for text display"

	scanner setFont: fontNumber
]

TextFontChange >> fontNumber
[
	^ fontNumber
]

TextFontChange >> fontNumber: int
[
	fontNumber := int
]

TextFontChange >> forFontInStyle: aTextStyle do: aBlock
[
	aBlock value: (aTextStyle fontAt: fontNumber)
]

TextFontChange >> hash
[
	"#hash is re-implemented because #= is re-implemented"

	^ fontNumber hash
]

TextFontChange >> printOn: strm
[
	super printOn: strm.
	strm
		nextPutAll: ' font: ';
		print: fontNumber
]

TextFontChange >> writeScanOn: strm
[
	strm nextPut: $f.
	fontNumber printOn: strm
]

TextFontChange class >> defaultFontChange
[
	"Answer a TextFontChange that represents the default font"

	| defaultFontStyle fontIndex |
	defaultFontStyle := TextStyle default.
	fontIndex := defaultFontStyle ifNil: 1 ifNotNil: [ defaultFontStyle defaultFontIndex ].
	^ self new fontNumber: fontIndex
]

TextFontChange class >> font1
[
	^ self new fontNumber: 1
]

TextFontChange class >> font2
[
	^ self new fontNumber: 2
]

TextFontChange class >> font3
[
	^ self new fontNumber: 3
]

TextFontChange class >> font4
[
	^ self new fontNumber: 4
]

TextFontChange class >> fontNumber: n
[
	^ self new fontNumber: n
]


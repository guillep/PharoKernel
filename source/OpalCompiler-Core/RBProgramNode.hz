RBProgramNode >> doSemanticAnalysis
[
	^ self method doSemanticAnalysis
]

RBProgramNode >> enclosingMethodOrBlockNode
[
	^ self methodOrBlockNode
]

RBProgramNode >> irInstruction
[
	"search for the first ir instruction that I generate"

	self methodNode ir sourceNode == self
		ifTrue: [ ^ self methodNode ir ].
	^ self methodNode ir firstInstructionMatching: [ :instr | instr sourceNode == self ]
]

RBProgramNode >> isClean
[
	^ self children allSatisfy: [ :child | child isClean ]
]

RBProgramNode >> methodOrBlockNode
[
	^ parent ifNotNil: [ parent methodOrBlockNode ]
]

RBProgramNode >> owningScope
[
	^ parent owningScope
]

RBProgramNode >> printAsIfCompiledOn: aStream
[
	aStream nextPutAll: self formattedCode
]

RBProgramNode >> scope
[
	^ self methodOrBlockNode scope
]


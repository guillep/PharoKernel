IRInterpreter
	package: #'OpalCompiler-Core'.

IRInterpreter >> blockReturnTop
[
	
]

IRInterpreter >> createTempVectorNamed: name withVars: vars
[
	
]

IRInterpreter >> goto: seqNum
[
	
]

IRInterpreter >> if: bool goto: seqNum1 otherwise: seqNum2
[
	
]

IRInterpreter >> interpret: anIr
[
	self interpretAll: anIr allSequences
]

IRInterpreter >> interpretAll: irSequences
[
	irSequences do: [ :seq | self interpretSequence: seq ]
]

IRInterpreter >> interpretInstruction: irInstruction
[
	irInstruction executeOn: self
]

IRInterpreter >> interpretSequence: instructionSequence
[
	self label: instructionSequence orderNumber.
	instructionSequence do: [ :instr | self interpretInstruction: instr ]
]

IRInterpreter >> label: seqNum
[
	
]

IRInterpreter >> popTop
[
	
]

IRInterpreter >> pushClosureCopyCopiedValues: copiedValues args: args jumpTo: labelSymbol
[
	
]

IRInterpreter >> pushConsArray: aSize
[
	
]

IRInterpreter >> pushDup
[
	
]

IRInterpreter >> pushInstVar: aSmallInteger
[
	
]

IRInterpreter >> pushLiteral: object
[
	
]

IRInterpreter >> pushLiteralVariable: object
[
	
]

IRInterpreter >> pushNewArray: size
[
	
]

IRInterpreter >> pushReceiver
[
	
]

IRInterpreter >> pushRemoteTemp: name inVector: tempVectorName
[
	
]

IRInterpreter >> pushTemp: index
[
	
]

IRInterpreter >> pushThisContext
[
	
]

IRInterpreter >> returnTop
[
	
]

IRInterpreter >> send: selector
[
	
]

IRInterpreter >> send: selector toSuperOf: behavior
[
	
]

IRInterpreter >> storeInstVar: index
[
	
]

IRInterpreter >> storeIntoLiteralVariable: index
[
	
]

IRInterpreter >> storeRemoteTemp: name inVector: tempVectorName
[
	
]

IRInterpreter >> storeTemp: index
[
	
]


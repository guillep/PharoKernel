FLVariableObjectCluster
	superclass: #FLPointerObjectCluster;
	package: #Fuel.

FLVariableObjectCluster >> materializeInstanceWith: aDecoder
[
	^ theClass fuelNew: aDecoder nextEncodedPositiveInteger
]

FLVariableObjectCluster >> materializeReferencesOf: anObject with: aDecoder
[
	super materializeReferencesOf: anObject with: aDecoder.
	self materializeReferencesVariablePartOf: anObject with: aDecoder
]

FLVariableObjectCluster >> materializeReferencesVariablePartOf: anObject with: aDecoder
[
	1 to: anObject basicSize do: [ :index | anObject basicAt: index put: aDecoder nextEncodedReference ]
]

FLVariableObjectCluster >> referencesOf: anObject do: aBlock
[
	super referencesOf: anObject do: aBlock.
	self variablePartReferencesOf: anObject do: aBlock
]

FLVariableObjectCluster >> serializeInstance: anObject with: anEncoder
[
	anEncoder encodePositiveInteger: anObject basicSize
]

FLVariableObjectCluster >> serializeReferencesOf: anObject with: anEncoder
[
	super serializeReferencesOf: anObject with: anEncoder.
	self serializeReferencesVariablePartOf: anObject with: anEncoder
]

FLVariableObjectCluster >> serializeReferencesVariablePartOf: anObject with: anEncoder
[
	1 to: anObject basicSize do: [ :index | anEncoder encodeReferenceTo: (anObject basicAt: index) ]
]

FLVariableObjectCluster >> variablePartReferencesOf: anObject do: aBlock
[
	1 to: anObject basicSize do: [ :index | aBlock value: (anObject basicAt: index) ]
]

[serializeReferencesVariablePartOf: anObject with: anEncoder
	1 to: anObject basicSize do: [ :index | anEncoder encodeReferenceTo: (anObject basicAt: index) ]
]

FLVariableObjectCluster >> variablePartReferencesOf: anObject do: aBlock
[variablePartReferencesOf: anObject do: aBlock
	1 to: anObject basicSize do: [ :index | aBlock value: (anObject basicAt: index) ]
]


Class DateAndTime >> fuelAccept: aGeneralMapper
[
^ aGeneralMapper visitHookPrimitive: self
]

Class DateAndTime >> fuelSet: julianDay nanoSecond: nanoSeconds seconds: numberOfSeconds offset: anOffset
[
julianDayNumber := julianDay.nanos := nanoSeconds.seconds := numberOfSeconds.offset := anOffset
]

Class DateAndTime >> serializeOn: anEncoder
[
anEncoder	encodeUint32: self julianDayNumberUTC;	encodeUint32: self nanoSecond;	encodeUint24: self secondsSinceMidnight;	encodeInt24: self offset asSeconds;	encodeInt32: self offset nanoSeconds
]

Metaclass DateAndTime >> materializeFrom: aDecoder
[
^ self basicNew	fuelSet: aDecoder nextEncodedUint32		nanoSecond: aDecoder nextEncodedUint32		seconds: aDecoder nextEncodedUint24		offset: (Duration seconds: aDecoder nextEncodedInt24 nanoSeconds: aDecoder nextEncodedInt32);	yourself
]


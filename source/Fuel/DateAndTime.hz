DateAndTime >> fuelAccept: aGeneralMapper
[
	^ aGeneralMapper visitHookPrimitive: self
]

DateAndTime >> fuelSet: julianDay nanoSecond: nanoSeconds seconds: numberOfSeconds offset: anOffset
[
	julianDayNumber := julianDay.
	nanos := nanoSeconds.
	seconds := numberOfSeconds.
	offset := anOffset
]

DateAndTime >> serializeOn: anEncoder
[
	anEncoder
		encodeUint32: self julianDayNumberUTC;
		encodeUint32: self nanoSecond;
		encodeInt24: self secondsSinceMidnight;
		encodeInt24: self offset asSeconds;
		encodeInt32: self offset nanoSeconds
]

DateAndTime class >> materializeFrom: aDecoder
[
	^ self basicNew
		fuelSet: aDecoder nextEncodedUint32
			nanoSecond: aDecoder nextEncodedUint32
			seconds: aDecoder nextEncodedInt24
			offset: (Duration seconds: aDecoder nextEncodedInt24 nanoSeconds: aDecoder nextEncodedInt32);
		yourself
]


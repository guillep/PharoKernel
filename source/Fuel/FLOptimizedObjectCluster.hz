FLOptimizedObjectCluster
	superclass: #FLIteratingCluster;
	package: #Fuel.

FLOptimizedObjectCluster >> materializeReferencesOf: anObject with: aDecoder
[
	"Hook method"

	self subclassResponsibility
]

FLOptimizedObjectCluster >> materializeReferencesStepWith: aDecoder
[
	objects do: [ :anObject | self materializeReferencesOf: anObject with: aDecoder ]
]

FLOptimizedObjectCluster >> serializeInstancesStepWith: anEncoder
[
	"Do nothing. I know my objects have nothing to serialize in this step."

	
]

FLOptimizedObjectCluster >> serializeReferencesOf: anObject with: anEncoder
[
	^ self subclassResponsibility
]

FLOptimizedObjectCluster >> serializeReferencesStepWith: anEncoder
[
	objects do: [ :anObject | self serializeReferencesOf: anObject with: anEncoder ]
]

FLOptimizedObjectCluster class >> clusterBucketIn: aClusterization
[
	^ aClusterization baselevelBucket
]


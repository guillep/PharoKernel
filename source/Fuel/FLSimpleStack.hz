FLSimpleStack
	instanceVariables: #(#array #slotIndex );
	package: #Fuel.

FLSimpleStack >> capacity
capacity
	^ array size

FLSimpleStack >> grow
grow
	"Become larger in capacity."

	| newArray |
	newArray := Array new: array size * 2.
	newArray
		replaceFrom: 1
		to: array size
		with: array
		startingAt: 1.
	array := newArray

FLSimpleStack >> initialize: hintSize
initialize: hintSize
	array := Array new: hintSize.
	slotIndex := 1

FLSimpleStack >> isEmpty
isEmpty
	^ 1 = slotIndex

FLSimpleStack >> pop
pop
	"Returns the first element and remove it from the stack."

	slotIndex := slotIndex - 1.
	^ array at: slotIndex

FLSimpleStack >> printOn: aStream
printOn: aStream
	"Append a sequence of characters that identify the receiver to aStream."

	super printOn: aStream.
	array printElementsOn: aStream

FLSimpleStack >> push: anObject
push: anObject
	"Adds a new object of any kind on top of the stack."

	array at: slotIndex put: anObject.
	array size = slotIndex
		ifTrue: [ self grow ].
	slotIndex := slotIndex + 1.
	^ anObject

FLSimpleStack class >> hintSize
hintSize
	^ 64

FLSimpleStack class >> new
new
	^ self new: self hintSize

FLSimpleStack class >> new: nElements
new: nElements
	"Create a Set large enough to hold nElements without growing"

	^ self basicNew initialize: nElements


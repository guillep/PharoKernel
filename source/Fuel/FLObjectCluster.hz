FLObjectCluster
	superclass: #FLIteratingCluster;
	instanceVariables: #(#theClass );
	package: #Fuel.

FLObjectCluster >> clusterMaterializeStepWith: aMaterialization
[
	super clusterMaterializeStepWith: aMaterialization.
	theClass := aMaterialization decoder nextEncodedReference
]

FLObjectCluster >> clusterReferencesDo: aBlock
[
	aBlock value: theClass
]

FLObjectCluster >> clusterSerializeStepWith: aSerialization
[
	super clusterSerializeStepWith: aSerialization.
	aSerialization encoder encodeReferenceTo: theClass
]

FLObjectCluster >> initializeAnalyzing: aClass
[
	self initializeAnalyzing.
	theClass := aClass
]

FLObjectCluster >> printNameOn: aStream
[
	"Append to the argument, aStream, a sequence of characters that  
	identifies the receiver."

	super printNameOn: aStream.
	aStream nextPut: $[.
	theClass printOn: aStream.
	aStream nextPut: $]
]

FLObjectCluster >> theClass
[
	^ theClass
]

FLObjectCluster class >> clusterBucketIn: aClusterization
[
	^ aClusterization baselevelBucket
]

FLObjectCluster class >> newAnalyzing: aClass
[
	^ self basicNew
		initializeAnalyzing: aClass;
		yourself
]

aClusterization
[clusterBucketIn: aClusterization
	^ aClusterization baselevelBucket
]

FLObjectCluster class >> newAnalyzing: aClass
[newAnalyzing: aClass
	^ self basicNew
		initializeAnalyzing: aClass;
		yourself
]


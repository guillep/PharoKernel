JISX0208
	superclass: #EncodedCharSet;
	package: #'Multilingual-Encodings'.

JISX0208 class >> charAtKuten: anInteger
[
	| a b |
	a := anInteger \\ 100.
	b := anInteger // 100.
	a > 94 | (b > 94)
		ifTrue: [ self error: 'character code is not valid' ].
	^ Character leadingChar: self leadingChar code: (b - 1) * 94 + a - 1
]

JISX0208 class >> compoundTextSequence
[
	^ compoundTextSequence
]

JISX0208 class >> initialize
[
	"
	self initialize
"

	compoundTextSequence := String
		streamContents: [ :s | s nextPut: (Character value: 27).
			s nextPut: $$.
			s nextPut: $B ]
]

JISX0208 class >> isBreakableAt: index in: text
[
	| prev |
	index = 1
		ifTrue: [ ^ false ].
	prev := text at: index - 1.
	prev leadingChar ~= 1
		ifTrue: [ ^ true ].
	^ false
]

JISX0208 class >> isLetter: char
[
	| value leading |
	leading := char leadingChar.
	value := char charCode.
	leading = 0
		ifTrue: [ ^ super isLetter: char ].
	value := value // 94 + 1.
	^ 1 <= value and: [ value < 84 ]
]

JISX0208 class >> leadingChar
[
	^ 1
]

JISX0208 class >> nextPutValue: ascii toStream: aStream withShiftSequenceIfNeededForTextConverterState: state
[
	| c1 c2 |
	state charSize: 2.
	state g0Leading ~= self leadingChar
		ifTrue: [ state g0Leading: self leadingChar.
			state g0Size: 2.
			aStream basicNextPutAll: compoundTextSequence ].
	c1 := ascii // 94 + 33.
	c2 := ascii \\ 94 + 33.
	^ aStream
		basicNextPut: (Character value: c1);
		basicNextPut: (Character value: c2)
]

JISX0208 class >> printingDirection
[
	^ #right
]

JISX0208 class >> stringFromKutenArray: anArray
[
	| s |
	s := WideString new: anArray size.
	1 to: anArray size do: [ :i | s at: i put: (self charAtKuten: (anArray at: i)) ].
	^ s
]

JISX0208 class >> ucsTable
[
	^ UCSTable jisx0208Table
]

JISX0208 class >> unicodeLeadingChar
[
	^ JapaneseEnvironment leadingChar
]


IdentitySet
	superclass: #Set;
	package: #'Collections-Unordered'.

IdentitySet >> asIdentitySet
[
	^ self
]

IdentitySet >> scanFor: anObject
[
	"Scan the key array for the first slot containing either a nil (indicating an empty slot) or an element that matches anObject. Answer the index of that slot or zero if no slot is found. This method will be overridden in various subclasses that have different interpretations for matching elements."

	| index start hash |
	hash := anObject identityHash.
	index := start := hash \\ array size + 1.
	[ | element |
	((element := array at: index) == nil or: [ element enclosedSetElement == anObject ])
		ifTrue: [ ^ index ].
	(index := index \\ array size + 1) = start ]
		whileFalse.
	self errorNoFreeSpace
]

IdentitySet >> scanForEmptySlotFor: aKey
[
	"Scan the key array for the first slot containing an empty slot (indicated by a nil). Answer the index of that slot. This method will be overridden in various subclasses that have different interpretations for matching elements."

	| index start |
	index := start := aKey identityHash \\ array size + 1.
	[ (array at: index) ifNil: [ ^ index ].
	(index := index \\ array size + 1) = start ] whileFalse.
	self errorNoFreeSpace
]

e + 1) = start ] whileFalse.
	self errorNoFreeSpace
]


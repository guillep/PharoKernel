DosTimestamp
	instanceVariables: #(#value );
	package: #Kernel.

DosTimestamp >> = rhs
[
	^ self value = rhs value
]

DosTimestamp >> asDateAndTime
[
	^ DateAndTime date: self date time: self time
]

DosTimestamp >> date
[
	"See class comment for format details"

	| encodedDate yearsSinceDosEpoch month day year |
	encodedDate := self high16Bits.
	yearsSinceDosEpoch := encodedDate >> 9.	"High 7 bits"
	month := encodedDate >> 5 & 2r1111.	"Middle 4 bits"
	day := encodedDate & 2r11111.	"Low 5 bits"
	year := self epoch year + yearsSinceDosEpoch.
	^ Date year: year month: month day: day
]

DosTimestamp >> epoch
[
	^ self class epoch
]

DosTimestamp >> hash
[
	^ self value hash
]

DosTimestamp >> high16Bits
[
	^ value >> 16
]

DosTimestamp >> initializeValue: anInteger
[
	value := anInteger.
	^ self
]

DosTimestamp >> low16Bits
[
	^ value & 2r1111111111111111
]

DosTimestamp >> printOn: aStream
[
	aStream
		nextPutAll: self asDateAndTime printString;
		nextPutAll: ' (';
		nextPutAll: self value asString;
		nextPut: $)
]

DosTimestamp >> time
[
	"See class comment for format details"

	| encodedTime hours minutes secondsHalved seconds |
	encodedTime := self low16Bits.
	hours := encodedTime >> 11.	"High 5 bits"
	minutes := encodedTime >> 5 & 2r111111.	"Middle 6 bits"
	secondsHalved := encodedTime & 2r11111.	"Low 5 bits"
	seconds := (secondsHalved * 2) floor.
	^ Time hour: hours minute: minutes second: seconds
]

DosTimestamp >> value
[
	^ value
]

DosTimestamp class >> dateValueFrom: aDate
[
	| dosYear dosMonth dosDay |
	dosYear := aDate year - DateAndTime dosEpoch year << 9.
	dosMonth := aDate monthIndex << 5.
	dosDay := aDate dayOfMonth.
	^ dosYear + dosMonth + dosDay
]

DosTimestamp class >> epoch
[
	^ DateAndTime dosEpoch
]

DosTimestamp class >> fromDateAndTime: aDateAndTime
[
	| dateValue timeValue local |
	local := aDateAndTime asLocal.
	dateValue := self dateValueFrom: local asDate.
	timeValue := self timeValueFrom: local asTime.
	^ self on: (dateValue << 16) + timeValue
]

DosTimestamp class >> on: anInteger
[
	^ self new initializeValue: anInteger
]

DosTimestamp class >> timeValueFrom: aTime
[
	| dosHours dosMinutes dosSeconds |
	dosHours := aTime hour << 11.
	dosMinutes := aTime minute << 5.
	dosSeconds := (aTime second / 2) floor.
	^ dosHours + dosMinutes + dosSeconds
]


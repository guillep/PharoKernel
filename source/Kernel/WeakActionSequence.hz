WeakActionSequence
	superclass: #Array;
	instanceSpecification: #(#variable #pointers #words );
	package: #Kernel.

WeakActionSequence >> asActionSequence
asActionSequence
	^ self

WeakActionSequence >> asMinimalRepresentation
asMinimalRepresentation
	| valid |
	valid := self select: [ :e | e isValid ].
	valid size = 0
		ifTrue: [ ^ nil ].
	valid size = 1
		ifTrue: [ ^ valid first ].
	^ valid

WeakActionSequence >> printOn: aStream
printOn: aStream
	self size < 2
		ifTrue: [ ^ super printOn: aStream ].
	aStream nextPutAll: '#('.
	self do: [ :each | each printOn: aStream ] separatedBy: [ aStream cr ].
	aStream nextPut: $)

WeakActionSequence >> value
value
	"Answer the result of evaluating the elements of the receiver.
	Actually, return just the last result."

	| answer |
	self do: [ :each | each isValid
				ifTrue: [ answer := each value ] ].
	^ answer

WeakActionSequence >> valueWithArguments: anArray
valueWithArguments: anArray
	"Return the last result"

	| answer |
	self do: [ :each | each isValid
				ifTrue: [ answer := each valueWithArguments: anArray ] ].
	^ answer


MessageNotUnderstood
	superclass: #Error;
	instanceVariables: #(#message #receiver #reachedDefaultHandler );
	package: #Kernel.

MessageNotUnderstood >> defaultAction
defaultAction
	reachedDefaultHandler := true.
	super defaultAction

MessageNotUnderstood >> initialize
initialize
	super initialize.
	reachedDefaultHandler := false

MessageNotUnderstood >> isResumable
isResumable
	"Determine whether an exception is resumable."

	^ true

MessageNotUnderstood >> message
message
	"Answer the selector and arguments of the message that failed."

	^ message

MessageNotUnderstood >> message: aMessage
message: aMessage
	message := aMessage

MessageNotUnderstood >> messageText
messageText
	"Return an exception's message text."

	^ messageText
		ifNil: [ message
				ifNil: [ super messageText ]
				ifNotNil: [ message lookupClass == UndefinedObject
						ifTrue: [ 'receiver of "{1}" is nil' translated format: {(message selector asString)} ]
						ifFalse: [ message lookupClass printString , '>>' , message selector asString ] ] ]

MessageNotUnderstood >> reachedDefaultHandler
reachedDefaultHandler
	^ reachedDefaultHandler

MessageNotUnderstood >> receiver
receiver
	"Answer the receiver that did not understand the message"

	^ receiver

MessageNotUnderstood >> receiver: obj
receiver: obj
	receiver := obj


MessageNotUnderstood
	superclass: #Error;
	instanceVariables: #(#message #receiver #reachedDefaultHandler );
	package: #Kernel.

MessageNotUnderstood >> defaultAction
[
	reachedDefaultHandler := true.
	super defaultAction
]

MessageNotUnderstood >> initialize
[
	super initialize.
	reachedDefaultHandler := false
]

MessageNotUnderstood >> isResumable
[
	"Determine whether an exception is resumable."

	^ true
]

MessageNotUnderstood >> message
[
	"Answer the selector and arguments of the message that failed."

	^ message
]

MessageNotUnderstood >> message: aMessage
[
	message := aMessage
]

MessageNotUnderstood >> messageText
[
	"Return an exception's message text."

	^ messageText
		ifNil: [ message
				ifNil: [ super messageText ]
				ifNotNil: [ message lookupClass == UndefinedObject
						ifTrue: [ 'receiver of "{1}" is nil' translated format: {(message selector asString)} ]
						ifFalse: [ message lookupClass printString , '>>' , message selector asString ] ] ]
]

MessageNotUnderstood >> reachedDefaultHandler
[
	^ reachedDefaultHandler
]

MessageNotUnderstood >> receiver
[
	"Answer the receiver that did not understand the message"

	^ receiver
]

MessageNotUnderstood >> receiver: obj
[
	receiver := obj
]


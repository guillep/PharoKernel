NotFound
	superclass: #Error;
	instanceVariables: #(#object );
	package: #'Collections-Abstract'.

NotFound >> collection
[
	"Return the collection where something is not found in"

	^ self signaler
]

NotFound >> collection: aCollection
[
	"Set the collection where something is not found in"

	self signaler: aCollection
]

NotFound >> messageText
[
	"Overwritten to initialiaze the message text to a standard text if it has not yet been set"

	^ messageText ifNil: [ messageText := self standardMessageText ]
]

NotFound >> object
[
	"Return the object that was not found"

	^ object
]

NotFound >> object: anObject
[
	"Set the object that was not found"

	object := anObject
]

NotFound >> standardMessageText
[
	"Generate a standard textual description"

	^ String
		streamContents: [ :stream | stream print: self object.
			stream << ' not found in '.
			stream print: self collection class ]
]

NotFound class >> signalFor: anObject
[
	"Create and signal a NotFond exception for anObject in the default receiver."

	^ self new
		object: anObject;
		signal
]

NotFound class >> signalFor: anObject in: aCollection
[
	"Create and signal a NotFond exception for anObject in aCollection."

	^ self new
		object: anObject;
		collection: aCollection;
		signal
]


Deprecation
	superclass: #Warning;
	instanceVariables: #(#methodReference #explanationString #deprecationDate #versionString );
	classVariables: #(#Log #RaiseWarning #ShowWarning );
	package: #'Kernel-Exceptions'.

Deprecation >> = anObject
[
	^ self class == anObject class
		and: [ methodReference = anObject methodReference
				and: [ methodReference ifNil: [ explanationString = anObject explanationString ] ifNotNil: [ true ] ] ]
]

Deprecation >> defaultAction
[
	Log ifNotNil: [ :log | log add: self ].
	self showWarning
		ifTrue: [ Transcript
				nextPutAll: self messageText;
				cr;
				flush ].
	self raiseWarning
		ifTrue: [ super defaultAction ]
]

Deprecation >> deprecationDate
[
	"Answer the value of deprecationDate"

	^ deprecationDate
]

Deprecation >> explanationString
[
	"Answer the value of explanationString"

	^ explanationString
]

Deprecation >> hash
[
	^ (methodReference ifNil: [ explanationString ]) hash
]

Deprecation >> messageText
[
	"Return an exception's message text."

	^ 'The method ' , methodReference fullName
		,
			' has been deprecated.' , explanationString
]

Deprecation >> method: aCompiledMethod explanation: anExplanationString on: dateString in: aVersionString
[
	methodReference := aCompiledMethod methodReference.
	explanationString := anExplanationString.
	deprecationDate := dateString.
	versionString := aVersionString
]

Deprecation >> methodReference
[
	"Answer the value of methodReference"

	^ methodReference
]

Deprecation >> raiseWarning
[
	^ self class raiseWarning
]

Deprecation >> showWarning
[
	^ self class showWarning
]

Deprecation >> versionString
[
	"Answer the value of versionString"

	^ versionString
]

Deprecation class >> deprecationsWhile: aBlock
[
	| oldLog result |
	oldLog := Log.
	Log := Set new.
	aBlock value.
	result := Log.
	oldLog ifNotNil: [ oldLog addAll: result ].
	Log := oldLog.
	^ result
]

Deprecation class >> initialize
[
	Log := nil
]

Deprecation class >> method: aCompiledMethod explanation: anExplanationString on: dateString in: aVersionString
[
	^ self new
		method: aCompiledMethod
		explanation: anExplanationString
		on: dateString
		in: aVersionString
]

Deprecation class >> raiseWarning
[
	^ RaiseWarning ifNil: [ RaiseWarning := true ]
]

Deprecation class >> raiseWarning: aBoolean
[
	RaiseWarning := aBoolean
]

Deprecation class >> showWarning
[
	^ ShowWarning ifNil: [ ShowWarning := true ]
]

Deprecation class >> showWarning: aBoolean
[
	ShowWarning := aBoolean
]


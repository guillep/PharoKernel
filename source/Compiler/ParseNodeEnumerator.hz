ParseNodeEnumerator
	superclass: #ParseNodeVisitor;
	instanceVariables: #(#theBlock #theSelectBlock );
	package: #Compiler.

ParseNodeEnumerator >> ofBlock: aBlock
[
	theBlock := aBlock
]

ParseNodeEnumerator >> ofBlock: aBlock select: aSelectBlock
[
	theBlock := aBlock.
	theSelectBlock := aSelectBlock
]

ParseNodeEnumerator >> shouldVisit: aNode
[
	^ theSelectBlock isNil or: [ theSelectBlock value: aNode ]
]

ParseNodeEnumerator >> visitAssignmentNode: anAssignmentNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: anAssignmentNode ])
		ifFalse: [ ^ nil ].
	theBlock value: anAssignmentNode.
	^ super visitAssignmentNode: anAssignmentNode
]

ParseNodeEnumerator >> visitBlockNode: aBlockNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aBlockNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aBlockNode.
	^ super visitBlockNode: aBlockNode
]

ParseNodeEnumerator >> visitBraceNode: aBraceNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aBraceNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aBraceNode.
	^ super visitBraceNode: aBraceNode
]

ParseNodeEnumerator >> visitCascadeNode: aCascadeNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aCascadeNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aCascadeNode.
	^ super visitCascadeNode: aCascadeNode
]

ParseNodeEnumerator >> visitCommentNode: aCommentNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aCommentNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aCommentNode.
	^ super visitCommentNode: aCommentNode
]

ParseNodeEnumerator >> visitFieldNode: aFieldNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aFieldNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aFieldNode.
	^ super visitFieldNode: aFieldNode
]

ParseNodeEnumerator >> visitFutureNode: aFutureNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aFutureNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aFutureNode.
	^ super visitFutureNode: aFutureNode
]

ParseNodeEnumerator >> visitInstanceVariableNode: anInstanceVariableNode
[
	(self shouldVisit: anInstanceVariableNode)
		ifFalse: [ ^ nil ].
	theBlock value: anInstanceVariableNode.
	^ super visitInstanceVariableNode: anInstanceVariableNode
]

ParseNodeEnumerator >> visitLiteralNode: aLiteralNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aLiteralNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aLiteralNode.
	^ super visitLiteralNode: aLiteralNode
]

ParseNodeEnumerator >> visitLiteralVariableNode: aLiteralVariableNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aLiteralVariableNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aLiteralVariableNode.
	^ super visitLiteralVariableNode: aLiteralVariableNode
]

ParseNodeEnumerator >> visitMessageNode: aMessageNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aMessageNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aMessageNode.
	^ super visitMessageNode: aMessageNode
]

ParseNodeEnumerator >> visitMessageNodeInCascade: aMessageNodeInCascade
[
	(theSelectBlock isNil or: [ theSelectBlock value: aMessageNodeInCascade ])
		ifFalse: [ ^ nil ].
	theBlock value: aMessageNodeInCascade.
	^ super visitMessageNodeInCascade: aMessageNodeInCascade
]

ParseNodeEnumerator >> visitMethodNode: aMethodNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aMethodNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aMethodNode.
	^ super visitMethodNode: aMethodNode
]

ParseNodeEnumerator >> visitNewArrayNode: aNewArrayNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aNewArrayNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aNewArrayNode.
	^ super visitNewArrayNode: aNewArrayNode
]

ParseNodeEnumerator >> visitRemoteTempVectorNode: aRemoteTempVectorNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aRemoteTempVectorNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aRemoteTempVectorNode.
	^ super visitRemoteTempVectorNode: aRemoteTempVectorNode
]

ParseNodeEnumerator >> visitReturnNode: aReturnNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aReturnNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aReturnNode.
	^ super visitReturnNode: aReturnNode
]

ParseNodeEnumerator >> visitSelectorNode: aSelectorNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aSelectorNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aSelectorNode.
	^ super visitSelectorNode: aSelectorNode
]

ParseNodeEnumerator >> visitTempVariableNode: aTempVariableNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aTempVariableNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aTempVariableNode.
	^ super visitTempVariableNode: aTempVariableNode
]

ParseNodeEnumerator >> visitVariableNode: aVariableNode
[
	(theSelectBlock isNil or: [ theSelectBlock value: aVariableNode ])
		ifFalse: [ ^ nil ].
	theBlock value: aVariableNode.
	^ super visitVariableNode: aVariableNode
]

ParseNodeEnumerator class >> ofBlock: aBlock
[
	^ self new ofBlock: aBlock
]

ParseNodeEnumerator class >> ofBlock: aBlock select: selectBlock
[
	^ self new ofBlock: aBlock select: selectBlock
]


EncoderForLongFormV3
	superclass: #BytecodeEncoder;
	package: #Compiler.

EncoderForLongFormV3 >> genBranchPopFalse: distance
[
	"See BlueBook page 596"

	distance < 0
		ifTrue: [ ^ self
				outOfRangeError: 'distance'
				index: distance
				range: 0
				to: 1023 ].
	distance < 1024
		ifTrue: [ "172-175 	101011ii jjjjjjjj 	Pop and Jump On False ii *256+jjjjjjjj"
			stream
				nextPut: 172 + (distance bitShift: -8);
				nextPut: (distance + 1024) \\ 256.
			^ self ].
	^ self
		outOfRangeError: 'distance'
		index: distance
		range: 0
		to: 1023
]

EncoderForLongFormV3 >> genBranchPopTrue: distance
[
	"See BlueBook page 596"

	distance < 0
		ifTrue: [ ^ self
				outOfRangeError: 'distance'
				index: distance
				range: 0
				to: 1023 ].
	distance < 1024
		ifTrue: [ "168-171 	101010ii jjjjjjjj 	Pop and Jump On True ii *256+jjjjjjjj"
			stream
				nextPut: 168 + (distance bitShift: -8);
				nextPut: (distance + 1024) \\ 256.
			^ self ].
	^ self
		outOfRangeError: 'distance'
		index: distance
		range: 0
		to: 1023
]

EncoderForLongFormV3 >> genDup
[
	"See BlueBook page 596"

	"136 	10001000 	Duplicate Stack Top"

	stream nextPut: 136
]

EncoderForLongFormV3 >> genJump: distance
[
	"See BlueBook page 596"

	^ self genJumpLong: distance
]

EncoderForLongFormV3 >> genJumpLong: distance
[
	"See BlueBook page 596"

	(distance >= -1024 and: [ distance < 1024 ])
		ifTrue: [ "160-167 	10100iii jjjjjjjj 	Jump(iii - 4) *256+jjjjjjjj"
			stream
				nextPut: 160 + (distance + 1024 bitShift: -8);
				nextPut: (distance + 1024) \\ 256.
			^ self ].
	^ self
		outOfRangeError: 'distance'
		index: distance
		range: -1024
		to: 1023
]

EncoderForLongFormV3 >> genPop
[
	"See BlueBook page 596"

	"135 	10000111 	Pop Stack Top"

	stream nextPut: 135
]

EncoderForLongFormV3 >> genPushInstVar: instVarIndex
[
	"See BlueBook page 596"

	(instVarIndex >= 0 and: [ instVarIndex < 64 ])
		ifTrue: [ "128 	10000000 jjkkkkkk 	Push (Receiver Variable, Temporary Location, Literal Constant, Literal Variable) [jj] #kkkkkk"
			stream
				nextPut: 128;
				nextPut: instVarIndex.
			^ self ].
	self genPushInstVarLong: instVarIndex
]

EncoderForLongFormV3 >> genPushInstVarLong: instVarIndex
[
	"See BlueBook page 596"

	"See also MaybeContextInstanceVariableNode"

	(instVarIndex >= 0 and: [ instVarIndex < 256 ])
		ifTrue: [ "132 	10000100 iiijjjjj kkkkkkkk 	(Send, Send Super, Push Receiver Variable, Push Literal Constant, Push Literal Variable, Store Receiver Variable, Store-Pop Receiver Variable, Store Literal Variable)[iii] #kkkkkkkk jjjjj"
			stream
				nextPut: 132;
				nextPut: 64;
				nextPut: instVarIndex.
			^ self ].
	^ self
		outOfRangeError: 'index'
		index: instVarIndex
		range: 0
		to: 255
]

EncoderForLongFormV3 >> genPushLiteral: literalIndex
[
	"See BlueBook page 596"

	literalIndex < 0
		ifTrue: [ ^ self
				outOfRangeError: 'index'
				index: literalIndex
				range: 0
				to: 255 ].
	literalIndex < 64
		ifTrue: [ "128 	10000000 jjkkkkkk 	Push (Receiver Variable, Temporary Location, Literal Constant, Literal Variable) [jj] #kkkkkk"
			stream
				nextPut: 128;
				nextPut: 128 + literalIndex.
			^ self ].
	literalIndex < 256
		ifTrue: [ "132 	10000100 iiijjjjj kkkkkkkk 	(Send, Send Super, Push Receiver Variable, Push Literal Constant, Push Literal Variable, Store Receiver Variable, Store-Pop Receiver Variable, Store Literal Variable)[iii] #kkkkkkkk jjjjj"
			stream
				nextPut: 132;
				nextPut: 96;
				nextPut: literalIndex.
			^ self ].
	^ self
		outOfRangeError: 'index'
		index: literalIndex
		range: 0
		to: 255
]

EncoderForLongFormV3 >> genPushLiteralVar: literalIndex
[
	"See BlueBook page 596"

	literalIndex < 0
		ifTrue: [ ^ self
				outOfRangeError: 'index'
				index: literalIndex
				range: 0
				to: 255 ].
	literalIndex < 64
		ifTrue: [ "128 	10000000 jjkkkkkk 	Push (Receiver Variable, Temporary Location, Literal Constant, Literal Variable) [jj] #kkkkkk"
			stream
				nextPut: 128;
				nextPut: 192 + literalIndex.
			^ self ].
	literalIndex < 256
		ifTrue: [ "132 	10000100 iiijjjjj kkkkkkkk 	(Send, Send Super, Push Receiver Variable, Push Literal Constant, Push Literal Variable, Store Receiver Variable, Store-Pop Receiver Variable, Store Literal Variable)[iii] #kkkkkkkk jjjjj"
			stream
				nextPut: 132;
				nextPut: 128;
				nextPut: literalIndex.
			^ self ].
	^ self
		outOfRangeError: 'index'
		index: literalIndex
		range: 0
		to: 255
]

EncoderForLongFormV3 >> genPushReceiver
[
	"See BlueBook page 596"

	"112-119 	01110iii 	Push (receiver, true, false, nil, -1, 0, 1, 2) [iii]"

	stream nextPut: 112
]

EncoderForLongFormV3 >> genPushSpecialLiteral: aLiteral
[
	"112-119 	01110iii 	Push (receiver, true, false, nil, -1, 0, 1, 2) [iii]"

	| index |
	index := #(true false nil -1 0 1 2) indexOf: aLiteral ifAbsent: 0.
	index = 0
		ifTrue: [ ^ self error: 'push special literal: ' , aLiteral printString , ' is not one of true false nil -1 0 1 2' ].
	stream nextPut: index + 112
]

EncoderForLongFormV3 >> genPushTemp: tempIndex
[
	"See BlueBook page 596"

	tempIndex < 0
		ifTrue: [ ^ self
				outOfRangeError: 'index'
				index: tempIndex
				range: 0
				to: 63 ].
	tempIndex < 64
		ifTrue: [ "128 	10000000 jjkkkkkk 	Push (Receiver Variable, Temporary Location, Literal Constant, Literal Variable) [jj] #kkkkkk"
			stream
				nextPut: 128;
				nextPut: 64 + tempIndex.
			^ self ].
	^ self
		outOfRangeError: 'index'
		index: tempIndex
		range: 0
		to: 63
]

EncoderForLongFormV3 >> genPushThisContext
[
	"See BlueBook page 596"

	"137 	10001001 	Push Active Context"

	stream nextPut: 137
]

EncoderForLongFormV3 >> genReturnReceiver
[
	"See BlueBook page 596"

	"120-123 	011110ii 	Return (receiver, true, false, nil) [ii] From Message"

	stream nextPut: 120
]

EncoderForLongFormV3 >> genReturnSpecialLiteral: aLiteral
[
	"120-123 	011110ii 	Return (receiver, true, false, nil) [ii] From Message"

	| index |
	index := #(true false nil) indexOf: aLiteral ifAbsent: 0.
	index = 0
		ifTrue: [ ^ self error: 'return special literal: ' , aLiteral printString , ' is not one of true false nil' ].
	stream nextPut: 120 + index
]

EncoderForLongFormV3 >> genReturnTop
[
	"See BlueBook page 596"

	"124-125 	0111110i 	Return Stack Top From (Message, Block) [i]"

	stream nextPut: 124
]

EncoderForLongFormV3 >> genReturnTopToCaller
[
	"See BlueBook page 596"

	"124-125 	0111110i 	Return Stack Top From (Message, Block) [i]"

	stream nextPut: 125
]

EncoderForLongFormV3 >> genSend: selectorLiteralIndex numArgs: nArgs
[
	"See BlueBook page 596 (with exceptions for 132 & 134)"

	nArgs < 0
		ifTrue: [ ^ self
				outOfRangeError: 'numArgs'
				index: nArgs
				range: 0
				to: 31	"!!" ].
	selectorLiteralIndex < 0
		ifTrue: [ "No special selector sends in long form."
			^ self
				outOfRangeError: 'selector literal index'
				index: selectorLiteralIndex
				range: 0
				to: 255 ].
	(selectorLiteralIndex < 32 and: [ nArgs < 8 ])
		ifTrue: [ "	131 	10000011 jjjkkkkk 	Send Literal Selector #kkkkk With jjj Arguments"
			stream
				nextPut: 131;
				nextPut: (nArgs bitShift: 5) + selectorLiteralIndex.
			^ self ].
	(selectorLiteralIndex < 64 and: [ nArgs < 4 ])
		ifTrue: [ 
			"In Squeak V3			134 	10000110 jjjjjjjj kkkkkkkk 	Send Literal Selector #kkkkkkkk To Superclass With jjjjjjjj Arguments		 is replaced by			134 	10000110 jjkkkkkk 	Send Literal Selector #kkkkkk With jj Arguments"
			stream
				nextPut: 134;
				nextPut: (nArgs bitShift: 6) + selectorLiteralIndex.
			^ self ].
	(selectorLiteralIndex <= 255 and: [ nArgs <= 31 ])
		ifTrue: [ 
			"In Squeak V3			132 	10000100 jjjjjjjj kkkkkkkk 	Send Literal Selector #kkkkkkkk With jjjjjjjj Arguments		  is replaced by			132 	10000100 ooojjjjj kkkkkkkk				ooo = 0 => Send Literal Selector #kkkkkkkk With jjjjj Arguments				ooo = 1 => Send Literal Selector #kkkkkkkk To Superclass With jjjjj Arguments"
			stream
				nextPut: 132;
				nextPut: nArgs;
				nextPut: selectorLiteralIndex.
			^ self ].
	nArgs > 31
		ifTrue: [ ^ self
				outOfRangeError: 'numArgs'
				index: nArgs
				range: 0
				to: 31 ].
	selectorLiteralIndex > 255
		ifTrue: [ ^ self
				outOfRangeError: 'selector literal index'
				index: selectorLiteralIndex
				range: 0
				to: 255 ]
]

EncoderForLongFormV3 >> genSendSuper: selectorLiteralIndex numArgs: nArgs
[
	"See BlueBook page 596 (with exceptions for 132 & 134)"

	nArgs < 0
		ifTrue: [ ^ self
				outOfRangeError: 'numArgs'
				index: nArgs
				range: 0
				to: 31	"!!" ].
	selectorLiteralIndex < 0
		ifTrue: [ ^ self
				outOfRangeError: 'selector literal index'
				index: selectorLiteralIndex
				range: 0
				to: 255 ].
	(selectorLiteralIndex < 32 and: [ nArgs < 8 ])
		ifTrue: [ "	133 	10000011 jjjkkkkk 	Send Literal Selector #kkkkk To Superclass With jjj Arguments"
			stream
				nextPut: 133;
				nextPut: (nArgs bitShift: 5) + selectorLiteralIndex.
			^ self ].
	(selectorLiteralIndex <= 255 and: [ nArgs <= 31 ])
		ifTrue: [ 
			"In Squeak V3			132 	10000100 jjjjjjjj kkkkkkkk 	Send Literal Selector #kkkkkkkk With jjjjjjjj Arguments		  is replaced by			132 	10000100 ooojjjjj kkkkkkkk				ooo = 0 => Send Literal Selector #kkkkkkkk With jjjjj Arguments				ooo = 1 => Send Literal Selector #kkkkkkkk To Superclass With jjjjj Arguments"
			stream
				nextPut: 132;
				nextPut: 32 + nArgs;
				nextPut: selectorLiteralIndex.
			^ self ].
	nArgs > 31
		ifTrue: [ ^ self
				outOfRangeError: 'numArgs'
				index: nArgs
				range: 0
				to: 31 ].
	selectorLiteralIndex > 255
		ifTrue: [ ^ self
				outOfRangeError: 'selector literal index'
				index: selectorLiteralIndex
				range: 0
				to: 255 ]
]

EncoderForLongFormV3 >> genStoreInstVar: instVarIndex
[
	"See BlueBook page 596"

	(instVarIndex >= 0 and: [ instVarIndex < 64 ])
		ifTrue: [ "129 	10000001 jjkkkkkk 	Store (Receiver Variable, Temporary Location, Illegal, Literal Variable) [jj] #kkkkkk"
			stream
				nextPut: 129;
				nextPut: instVarIndex.
			^ self ].
	self genStoreInstVarLong: instVarIndex
]

EncoderForLongFormV3 >> genStoreInstVarLong: instVarIndex
[
	"See BlueBook page 596"

	"See also MaybeContextInstanceVariableNode"

	(instVarIndex >= 0 and: [ instVarIndex < 256 ])
		ifTrue: [ "132 	10000100 iiijjjjj kkkkkkkk 	(Send, Send Super, Push Receiver Variable, Push Literal Constant, Push Literal Variable, Store Receiver Variable, Store-Pop Receiver Variable, Store Literal Variable)[iii] #kkkkkkkk jjjjj"
			stream
				nextPut: 132;
				nextPut: 160;
				nextPut: instVarIndex.
			^ self ].
	^ self
		outOfRangeError: 'index'
		index: instVarIndex
		range: 0
		to: 255
]

EncoderForLongFormV3 >> genStoreLiteralVar: literalIndex
[
	"See BlueBook page 596"

	literalIndex < 0
		ifTrue: [ ^ self
				outOfRangeError: 'index'
				index: literalIndex
				range: 0
				to: 255 ].
	literalIndex < 64
		ifTrue: [ "129 	10000001 jjkkkkkk 	Store (Receiver Variable, Temporary Location, Illegal, Literal Variable) [jj] #kkkkkk"
			stream
				nextPut: 129;
				nextPut: 192 + literalIndex.
			^ self ].
	literalIndex <= 255
		ifTrue: [ "132 	10000100 iiijjjjj kkkkkkkk 	(Send, Send Super, Push Receiver Variable, Push Literal Constant, Push Literal Variable, Store Receiver Variable, Store-Pop Receiver Variable, Store Literal Variable)[iii] #kkkkkkkk jjjjj"
			stream
				nextPut: 132;
				nextPut: 224;
				nextPut: literalIndex.
			^ self ].
	^ self
		outOfRangeError: 'index'
		index: literalIndex
		range: 0
		to: 255
]

EncoderForLongFormV3 >> genStorePopInstVar: instVarIndex
[
	"See BlueBook page 596"

	(instVarIndex >= 0 and: [ instVarIndex < 64 ])
		ifTrue: [ "130 	10000010 jjkkkkkk 	Pop and Store (Receiver Variable, Temporary Location, Illegal, Literal Variable) [jj] #kkkkkk"
			stream
				nextPut: 130;
				nextPut: instVarIndex.
			^ self ].
	self genStorePopInstVarLong: instVarIndex
]

EncoderForLongFormV3 >> genStorePopInstVarLong: instVarIndex
[
	"See BlueBook page 596"

	"See also MaybeContextInstanceVariableNode"

	(instVarIndex >= 0 and: [ instVarIndex < 256 ])
		ifTrue: [ "132 	10000100 iiijjjjj kkkkkkkk 	(Send, Send Super, Push Receiver Variable, Push Literal Constant, Push Literal Variable, Store Receiver Variable, Store-Pop Receiver Variable, Store Literal Variable)[iii] #kkkkkkkk jjjjj"
			stream
				nextPut: 132;
				nextPut: 192;
				nextPut: instVarIndex.
			^ self ].
	^ self
		outOfRangeError: 'index'
		index: instVarIndex
		range: 0
		to: 255
]

EncoderForLongFormV3 >> genStorePopLiteralVar: literalIndex
[
	"See BlueBook page 596"

	literalIndex < 0
		ifTrue: [ ^ self
				outOfRangeError: 'index'
				index: literalIndex
				range: 0
				to: 255 ].
	literalIndex < 64
		ifTrue: [ "130 	10000010 jjkkkkkk 	Pop and Store (Receiver Variable, Temporary Location, Illegal, Literal Variable) [jj] #kkkkkk"
			stream
				nextPut: 130;
				nextPut: 192 + literalIndex.
			^ self ].
	literalIndex <= 255
		ifTrue: [ "132 	10000100 iiijjjjj kkkkkkkk 	(Send, Send Super, Push Receiver Variable, Push Literal Constant, Push Literal Variable, Store Receiver Variable, Store-Pop Receiver Variable, Store Literal Variable)[iii] #kkkkkkkk jjjjj"
			stream
				nextPut: 132;
				nextPut: 224;
				nextPut: literalIndex.
			self genPop.
			^ self ].
	^ self
		outOfRangeError: 'index'
		index: literalIndex
		range: 0
		to: 255
]

EncoderForLongFormV3 >> genStorePopTemp: tempIndex
[
	"See BlueBook page 596"

	tempIndex < 0
		ifTrue: [ ^ self
				outOfRangeError: 'index'
				index: tempIndex
				range: 0
				to: 63 ].
	tempIndex < 64
		ifTrue: [ "130 	10000010 jjkkkkkk 	Pop and Store (Receiver Variable, Temporary Location, Illegal, Literal Variable) [jj] #kkkkkk"
			stream
				nextPut: 130;
				nextPut: 64 + tempIndex.
			^ self ].
	^ self
		outOfRangeError: 'index'
		index: tempIndex
		range: 0
		to: 63
]

EncoderForLongFormV3 >> genStoreTemp: tempIndex
[
	"See BlueBook page 596"

	tempIndex < 0
		ifTrue: [ ^ self
				outOfRangeError: 'index'
				index: tempIndex
				range: 0
				to: 63 ].
	tempIndex < 64
		ifTrue: [ "129 	10000001 jjkkkkkk 	Store (Receiver Variable, Temporary Location, Illegal, Literal Variable) [jj] #kkkkkk"
			stream
				nextPut: 129;
				nextPut: 64 + tempIndex.
			^ self ].
	^ self
		outOfRangeError: 'index'
		index: tempIndex
		range: 0
		to: 63
]

EncoderForLongFormV3 >> initScopeAndLiteralTables
[
	super initScopeAndLiteralTables.	"Start with an empty selector set to avoid the special selectors."
	selectorSet := Dictionary new: 16
]


Protocol
	instanceVariables: #(#methods #name );
	package: #'ClassOrganizer-Core'.

Protocol >> addAllMethodsFrom: aProtocol
[
	aProtocol methods do: [ :each | self addMethod: each ]
]

Protocol >> addMethod: aSymbol
[
	^ methods add: aSymbol
]

Protocol >> canBeRemoved
[
	^ self isEmpty
]

Protocol >> canBeRenamed
[
	^ true
]

Protocol >> includesSelector: selector
[
	^ methods includes: selector
]

Protocol >> initialize
[
	super initialize.
	methods := IdentitySet new.
	name := self class defaultName
]

Protocol >> isEmpty
[
	^ self methods isEmpty
]

Protocol >> isExtensionProtocol
[
	^ self name first = $*
]

Protocol >> isVirtualProtocol
[
	"A virtual protocol is a calculated one (it does not have any methods by it self)"

	^ false
]

Protocol >> methods
[
	^ methods
]

Protocol >> methods: anObject
[
	methods := anObject
]

Protocol >> name
[
	^ name
]

Protocol >> name: anObject
[
	name := anObject asSymbol
]

Protocol >> printOn: aStream
[
	aStream
		nextPutAll: self class name;
		nextPutAll: ' (';
		nextPutAll: self name;
		nextPutAll: ') - ';
		nextPutAll: self methods size asString;
		nextPutAll: ' selector(s)'
]

Protocol >> removeAllMethods
[
	^ methods removeAll
]

Protocol >> removeMethod: aSymbol
[
	^ methods remove: aSymbol
]

Protocol >> rename: newName
[
	self name: newName
]

Protocol class >> ambiguous
[
	^ #ambiguous
]

Protocol class >> defaultName
[
	^ self unclassified
]

Protocol class >> empty
[
	^ self name: #''
]

Protocol class >> name: nm
[
	^ self new
		name: nm;
		yourself
]

Protocol class >> name: nm methods: methods
[
	^ self new
		methods: methods;
		name: nm;
		yourself
]

Protocol class >> nullCategory
[
	^ #'no messages'
]

Protocol class >> unclassified
[
	^ #'as yet unclassified'
]


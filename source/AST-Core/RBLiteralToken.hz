RBLiteralToken
	superclass: #RBValueToken;
	instanceVariables: #(#stopPosition );
	package: #'AST-Core'.

RBLiteralToken >> isLiteralToken
[
	^ true
]

RBLiteralToken >> isMultiKeyword
[
	^ false
]

RBLiteralToken >> length
[
	^ stopPosition - self start + 1
]

RBLiteralToken >> realValue
[
	^ value
]

RBLiteralToken >> stop: anObject
[
	stopPosition := anObject
]

RBLiteralToken >> storeOn: aStream
[
	value isSymbol
		ifTrue: [ aStream nextPut: $#.
			((RBScanner isSelector: value) and: [ value ~~ #'||' ])
				ifTrue: [ aStream nextPutAll: value ]
				ifFalse: [ value asString printOn: aStream ].
			^ self ].
	value class == Character
		ifTrue: [ aStream
				nextPut: $$;
				nextPut: value.
			^ self ].
	value storeOn: aStream
]

RBLiteralToken >> value: aString start: anInteger stop: stopInteger
[
	value := aString.
	sourcePointer := anInteger.
	stopPosition := stopInteger
]

RBLiteralToken class >> value: anObject
[
	| literal |
	literal := anObject class == Array
		ifTrue: [ anObject collect: [ :each | self value: each ] ]
		ifFalse: [ anObject ].
	^ self value: literal start: nil stop: nil
]

RBLiteralToken class >> value: aString start: anInteger stop: stopInteger
[
	^ self new
		value: aString start: anInteger stop: stopInteger;
		yourself
]


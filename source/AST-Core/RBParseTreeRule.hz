RBParseTreeRule
	instanceVariables: #(#searchTree #owner );
	package: #'AST-Core'.

RBParseTreeRule >> canMatch: aProgramNode
[
	^ true
]

RBParseTreeRule >> context
[
	^ owner context
]

RBParseTreeRule >> foundMatchFor: aProgramNode
[
	^ aProgramNode
]

RBParseTreeRule >> methodSearchString: aString
[
	searchTree := RBParser parseRewriteMethod: aString
]

RBParseTreeRule >> owner: aParseTreeSearcher
[
	owner := aParseTreeSearcher
]

RBParseTreeRule >> performOn: aProgramNode
[
	self context empty.
	^ ((searchTree match: aProgramNode inContext: self context) and: [ self canMatch: aProgramNode ])
		ifTrue: [ owner recusivelySearchInContext.
			self foundMatchFor: aProgramNode ]
		ifFalse: [ nil ]
]

RBParseTreeRule >> searchString: aString
[
	searchTree := RBParser parseRewriteExpression: aString
]

RBParseTreeRule >> sentMessages
[
	^ searchTree sentMessages
]

RBParseTreeRule class >> methodSearch: aString
[
	^ self new
		methodSearchString: aString;
		yourself
]

RBParseTreeRule class >> search: aString
[
	^ self new
		searchString: aString;
		yourself
]


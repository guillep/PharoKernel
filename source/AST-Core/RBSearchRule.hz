RBSearchRule
	superclass: #RBParseTreeRule;
	instanceVariables: #(#answerBlock );
	package: #'AST-Core'.

RBSearchRule >> canMatch: aProgramNode
[
	owner answer: (answerBlock value: aProgramNode value: owner answer).
	^ true
]

RBSearchRule >> searchFor: aString thenDo: aBlock
[
	self searchString: aString.
	answerBlock := aBlock
]

RBSearchRule >> searchForMethod: aString thenDo: aBlock
[
	self methodSearchString: aString.
	answerBlock := aBlock
]

RBSearchRule >> searchForTree: aBRProgramNode thenDo: aBlock
[
	searchTree := aBRProgramNode.
	answerBlock := aBlock
]

RBSearchRule class >> searchFor: aString thenDo: aBlock
[
	^ self new searchFor: aString thenDo: aBlock
]

RBSearchRule class >> searchForMethod: aString thenDo: aBlock
[
	^ self new searchForMethod: aString thenDo: aBlock
]

RBSearchRule class >> searchForTree: aBRProgramNode thenDo: aBlock
[
	^ self new searchForTree: aBRProgramNode thenDo: aBlock
]


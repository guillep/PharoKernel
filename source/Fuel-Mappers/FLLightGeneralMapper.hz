FLLightGeneralMapper
	superclass: #FLMapper;
	package: #'Fuel-Mappers'.

FLLightGeneralMapper >> clusterClassForCharacter: aCharacter
[
	^ aCharacter isOctetCharacter
		ifTrue: [ FLHookPrimitiveCluster ]
		ifFalse: [ FLFixedObjectCluster ]
]

FLLightGeneralMapper >> clusterClassForSmallInteger: aSmallInteger
[
	aSmallInteger >= 0
		ifTrue: [ aSmallInteger <= 255
				ifTrue: [ ^ FLPositive8SmallIntegerCluster ].
			aSmallInteger <= 65535
				ifTrue: [ ^ FLPositive16SmallIntegerCluster ].
			aSmallInteger <= 16777215
				ifTrue: [ ^ FLPositive24SmallIntegerCluster ].
			aSmallInteger <= 4294967295
				ifTrue: [ ^ FLPositive32SmallIntegerCluster ] ].
	aSmallInteger >= -128
		ifTrue: [ ^ FLNegative8SmallIntegerCluster ].
	aSmallInteger >= -32768
		ifTrue: [ ^ FLNegative16SmallIntegerCluster ].
	aSmallInteger >= -8388608
		ifTrue: [ ^ FLNegative24SmallIntegerCluster ].
	aSmallInteger >= -2147483648
		ifTrue: [ ^ FLNegative32SmallIntegerCluster ]
]

FLLightGeneralMapper >> mapAndTrace: anObject
[
	anObject fuelAccept: self
]

FLLightGeneralMapper >> mapAndTraceInstanceSideGlobal: aClassOrTrait
[
	(self clusterKeyedByClusterName: FLGlobalClassCluster) add: aClassOrTrait traceWith: analysis
]

FLLightGeneralMapper >> visitBytesObject: anObject
[
	self mapAndTraceByObjectClass: anObject to: FLByteObjectCluster
]

FLLightGeneralMapper >> visitCharacter: aCharacter
[
	self flag: #todo.	"confusing"
	self mapAndTraceByObjectClass: aCharacter to: (self clusterClassForCharacter: aCharacter)
]

FLLightGeneralMapper >> visitClass: aClass
[
	self mapAndTraceInstanceSideGlobal: aClass
]

FLLightGeneralMapper >> visitClassTrait: aClassTrait
[
	self mapAndTraceByClusterName: aClassTrait to: FLGlobalClassSideCluster
]

FLLightGeneralMapper >> visitCompiledMethod: aCompiledMethod
[
	(aCompiledMethod isInstalled not or: [ aCompiledMethod isDoIt ])
		ifTrue: [ self mapAndTraceByClusterName: aCompiledMethod to: FLCompiledMethodCluster ]
		ifFalse: [ self mapAndTraceByClusterName: aCompiledMethod to: FLGlobalCompiledMethodCluster ]
]

FLLightGeneralMapper >> visitDictionary: aDictionary
[
	self mapAndTraceByObjectClass: aDictionary to: FLDictionaryCollectionCluster
]

FLLightGeneralMapper >> visitFixedObject: anObject
[
	self mapAndTraceByObjectClass: anObject to: FLFixedObjectCluster
]

FLLightGeneralMapper >> visitGlobalSend: anObject name: globalName selector: aSymbol
[
	(self clusterKeyedByClusterName: FLGlobalSendCluster)
		add: anObject
		name: globalName
		selector: aSymbol
		traceWith: analysis
]

FLLightGeneralMapper >> visitHookPrimitive: anObject
[
	self mapAndTraceByObjectClass: anObject to: FLHookPrimitiveCluster
]

FLLightGeneralMapper >> visitMetaclass: aMetaclass
[
	self mapAndTraceByClusterName: aMetaclass to: FLGlobalClassSideCluster
]

FLLightGeneralMapper >> visitMethodContext: aMethodContext
[
	self mapAndTraceByObjectClass: aMethodContext to: FLMethodContextCluster
]

FLLightGeneralMapper >> visitNotSerializable: anObject
[
	FLNotSerializable signalWith: anObject
]

FLLightGeneralMapper >> visitPoint: aPoint
[
	self mapAndTraceByClusterName: aPoint to: FLPointCluster
]

FLLightGeneralMapper >> visitRectangle: aRectangle
[
	self mapAndTraceByClusterName: aRectangle to: FLRectangleCluster
]

FLLightGeneralMapper >> visitSimpleCollection: aCollection
[
	self mapAndTraceByObjectClass: aCollection to: FLSimpleCollectionCluster
]

FLLightGeneralMapper >> visitSmallInteger: aSmallInteger
[
	self mapAndTraceByClusterName: aSmallInteger to: (self clusterClassForSmallInteger: aSmallInteger)
]

FLLightGeneralMapper >> visitSubstitution: anObject by: anotherObject
[
	(self clusterKeyedByClusterName: FLSubstitutionCluster) add: anObject substitutedBy: anotherObject traceWith: analysis
]

FLLightGeneralMapper >> visitSubstitution: anObject by: anotherObject onRecursionDo: aBlock
[
	| cluster |
	cluster := self clusterKeyedByClusterName: FLSubstitutionCluster.
	(cluster isSubstitute: anObject)
		ifTrue: aBlock
		ifFalse: [ cluster add: anObject substitutedBy: anotherObject traceWith: analysis ]
]

FLLightGeneralMapper >> visitTrait: aTrait
[
	self mapAndTraceInstanceSideGlobal: aTrait
]

FLLightGeneralMapper >> visitVariableObject: anObject
[
	self mapAndTraceByObjectClass: anObject to: FLVariableObjectCluster
]

FLLightGeneralMapper >> visitWeakObject: anObject
[
	self mapAndTraceByObjectClass: anObject to: FLWeakVariableObjectCluster
]

FLLightGeneralMapper >> visitWordsObject: anObject
[
	self mapAndTraceByObjectClass: anObject to: FLWordObjectCluster
]


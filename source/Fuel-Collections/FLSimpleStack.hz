FLSimpleStack
	instanceVariables: #(#array #slotIndex );
	package: #'Fuel-Collections'.

FLSimpleStack >> capacity
[
	^ array size
]

FLSimpleStack >> grow
[
	"Become larger in capacity."

	| newArray |
	newArray := Array new: array size * 2.
	newArray
		replaceFrom: 1
		to: array size
		with: array
		startingAt: 1.
	array := newArray
]

FLSimpleStack >> initialize: hintSize
[
	array := Array new: hintSize.
	slotIndex := 1
]

FLSimpleStack >> isEmpty
[
	^ 1 = slotIndex
]

FLSimpleStack >> pop
[
	"Returns the first element and remove it from the stack."

	slotIndex := slotIndex - 1.
	^ array at: slotIndex
]

FLSimpleStack >> printOn: aStream
[
	"Append a sequence of characters that identify the receiver to aStream."

	super printOn: aStream.
	array printElementsOn: aStream
]

FLSimpleStack >> push: anObject
[
	"Adds a new object of any kind on top of the stack."

	array at: slotIndex put: anObject.
	array size = slotIndex
		ifTrue: [ self grow ].
	slotIndex := slotIndex + 1.
	^ anObject
]

FLSimpleStack class >> hintSize
[
	^ 64
]

FLSimpleStack class >> new
[
	^ self new: self hintSize
]

FLSimpleStack class >> new: nElements
[
	"Create a Set large enough to hold nElements without growing"

	^ self basicNew initialize: nElements
]


CopyVisitor
	superclass: #FileSystemVisitor;
	instanceVariables: #(#source #dest );
	package: #'FileSystem-Core-Implementation'.

CopyVisitor >> copyDirectory: aReference
[
	| directory |
	directory := dest resolve: (aReference relativeTo: source).
	directory createDirectory
]

CopyVisitor >> copyFile: aReference
[
	| copy |
	copy := dest resolve: (aReference relativeTo: source).
	aReference copyTo: copy
]

CopyVisitor >> initializeWithSource: srcReference dest: dstReference
[
	self initialize.
	source := srcReference.
	dest := dstReference
]

CopyVisitor >> visit
[
	(PreorderGuide for: self) show: source
]

CopyVisitor >> visitDirectory: anEntry
[
	| reference |
	reference := anEntry reference.
	reference = source
		ifTrue: [ dest ensureDirectory ]
		ifFalse: [ self copyDirectory: reference ]
]

CopyVisitor >> visitFile: anEntry
[
	| reference |
	reference := anEntry reference.
	reference = source
		ifTrue: [ source copyTo: dest ]
		ifFalse: [ self copyFile: reference ]
]

CopyVisitor class >> copy: source to: dest
[
	(self from: source to: dest) visit
]

CopyVisitor class >> from: srcReference to: dstReference
[
	^ self basicNew initializeWithSource: srcReference dest: dstReference
]


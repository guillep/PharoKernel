Class
	name: #CopyVisitor;
	superclass: #ClassFileSystemVisitor;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #(#source #dest );
	classVariables: #();
	package: #'FileSystem-Core-Implementation'.

Class CopyVisitor >> copyDirectory: aReference
[
| directory |directory := dest resolve: (aReference relativeTo: source).directory createDirectory
]

Class CopyVisitor >> copyFile: aReference
[
| copy |copy := dest resolve: (aReference relativeTo: source).aReference copyTo: copy
]

Class CopyVisitor >> initializeWithSource: srcReference dest: dstReference
[
self initialize.source := srcReference.dest := dstReference
]

Class CopyVisitor >> visit
[
(PreorderGuide for: self) show: source
]

Class CopyVisitor >> visitDirectory: anEntry
[
| reference |reference := anEntry reference.reference = source	ifTrue: [ dest ensureDirectory ]	ifFalse: [ self copyDirectory: reference ]
]

Class CopyVisitor >> visitFile: anEntry
[
| reference |reference := anEntry reference.reference = source	ifTrue: [ source copyTo: dest ]	ifFalse: [ self copyFile: reference ]
]

Metaclass
	name: #CopyVisitor;
	instanceVariables: #().

Metaclass CopyVisitor >> copy: source to: dest
[
(self from: source to: dest) visit
]

Metaclass CopyVisitor >> from: srcReference to: dstReference
[
^ self basicNew initializeWithSource: srcReference dest: dstReference
]


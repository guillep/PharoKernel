SetElement
	instanceVariables: #(#enclosedElement );
	classVariables: #(#NilElement );
	package: #'Collections-Support'.

SetElement >> = anObject
[
	^ anObject class = self class and: [ enclosedElement = anObject enclosedSetElement ]
]

SetElement >> asSetElement
[
	"A receiver has to be included into a set, as a distinct object.
	We need to wrap receiver in own turn, otherwise #enclosedSetElement will return wrong object for that set"

	^ SetElement with: self
]

SetElement >> enclosedSetElement
[
	^ enclosedElement
]

SetElement >> enclosedSetElement: anObject
[
	enclosedElement := anObject
]

SetElement >> hash
[
	^ enclosedElement hash
]

SetElement class >> initialize
[
	NilElement := self with: nil
]

SetElement class >> with: anObject
[
	^ self new enclosedSetElement: anObject
]

SetElement class >> withNil
[
	^ NilElement
]

ject
	^ self new enclosedSetElement: anObject
]

SetElement class >> withNil
[withNil
	^ NilElement
]


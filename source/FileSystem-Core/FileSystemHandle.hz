FileSystemHandle
	instanceVariables: #(#reference #writable );
	classVariables: #(#Primitives );
	package: #'FileSystem-Core'.

FileSystemHandle >> at: index
[at: index
	| buffer |
	buffer := ByteArray new: 1.
	self
		at: index
		read: buffer
		startingAt: 1
		count: 1.
	^ buffer at: 1
]

FileSystemHandle >> at: index put: anObject
[at: index put: anObject
	| buffer |
	buffer := ByteArray with: (anObject isCharacter
				ifTrue: [ anObject codePoint ]
				ifFalse: [ anObject ]).
	self
		at: index
		write: buffer
		startingAt: 1
		count: 1
]

FileSystemHandle >> at: offset read: buffer startingAt: start count: count
[at: offset read: buffer startingAt: start count: count
	self subclassResponsibility
]

FileSystemHandle >> at: offset write: buffer startingAt: start count: count
[at: offset write: buffer startingAt: start count: count
	self subclassResponsibility
]

FileSystemHandle >> basicOpen
[basicOpen
	"get the raw stream description from the filesystem's store"

	^ self fileSystem openStreamDescription: reference path writable: writable
]

FileSystemHandle >> close
[close
	self subclassResponsibility
]

FileSystemHandle >> ensureClosed
[ensureClosed
	reference exists
		ifTrue: [ self close ]
]

FileSystemHandle >> fileSystem
[fileSystem
	^ reference fileSystem
]

FileSystemHandle >> flush
[flush
	self subclassResponsibility
]

FileSystemHandle >> fullName
[fullName
	^ reference fullName
]

FileSystemHandle >> isOpen
[isOpen
	self subclassResponsibility
]

FileSystemHandle >> isWritable
[isWritable
	^ writable
]

FileSystemHandle >> open
[open
	self subclassResponsibility
]

FileSystemHandle >> readStream
[readStream
	self subclassResponsibility
]

FileSystemHandle >> reference
[reference
	^ reference
]

FileSystemHandle >> reopen
[reopen
	self close.
	self open
]

FileSystemHandle >> setReference: aReference writable: aBoolean
[setReference: aReference writable: aBoolean
	reference := aReference resolve.
	writable := aBoolean
]

FileSystemHandle >> truncateTo: anInteger
[truncateTo: anInteger
	self subclassResponsibility
]

FileSystemHandle >> writeStream
[writeStream
	self subclassResponsibility
]

FileSystemHandle class >> on: aReference writable: aBoolean
[on: aReference writable: aBoolean
	^ self new setReference: aReference writable: aBoolean
]

FileSystemHandle class >> open: aReference writable: aBoolean
[open: aReference writable: aBoolean
	^ (self on: aReference writable: aBoolean) open
]


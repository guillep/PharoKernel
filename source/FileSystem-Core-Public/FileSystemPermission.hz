Class
	name: #FileSystemPermission;
	superclass: #ClassObject;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #(#posixPermission );
	classVariables: #();
	package: #'FileSystem-Core-Public'.

Class FileSystemPermission >> < other
[
^ posixPermission < other posixPermission
]

Class FileSystemPermission >> groupExecute
[
^ self permissionBitAt: 4
]

Class FileSystemPermission >> groupRead
[
^ self permissionBitAt: 6
]

Class FileSystemPermission >> groupWrite
[
^ self permissionBitAt: 5
]

Class FileSystemPermission >> initialize: aNumber
[
posixPermission := aNumber.self initialize
]

Class FileSystemPermission >> isReadable
[
^ self ownerRead
]

Class FileSystemPermission >> isWritable
[
^ self ownerWrite
]

Class FileSystemPermission >> otherExecute
[
^ self permissionBitAt: 1
]

Class FileSystemPermission >> otherRead
[
^ self permissionBitAt: 3
]

Class FileSystemPermission >> otherWrite
[
^ self permissionBitAt: 2
]

Class FileSystemPermission >> ownerExecute
[
^ self permissionBitAt: 7
]

Class FileSystemPermission >> ownerRead
[
^ self permissionBitAt: 9
]

Class FileSystemPermission >> ownerWrite
[
^ self permissionBitAt: 8
]

Class FileSystemPermission >> permissionBitAt: bitIndex
[
^ (posixPermission bitAt: bitIndex) == 1
]

Class FileSystemPermission >> printOn: aStream
[
aStream	nextPut:			(self ownerRead					ifTrue: [ $r ]					ifFalse: [ $- ]);	nextPut:			(self ownerWrite					ifTrue: [ $w ]					ifFalse: [ $- ]);	nextPut:			(self ownerExecute					ifTrue: [ $x ]					ifFalse: [ $- ]);	nextPut:			(self groupRead					ifTrue: [ $r ]					ifFalse: [ $- ]);	nextPut:			(self groupWrite					ifTrue: [ $w ]					ifFalse: [ $- ]);	nextPut:			(self groupExecute					ifTrue: [ $x ]					ifFalse: [ $- ]);	nextPut:			(self otherRead					ifTrue: [ $r ]					ifFalse: [ $- ]);	nextPut:			(self otherWrite					ifTrue: [ $w ]					ifFalse: [ $- ]);	nextPut:			(self otherExecute					ifTrue: [ $x ]					ifFalse: [ $- ])	"Owner"	"Group"	"Other"
]

Metaclass
	name: #FileSystemPermission;
	instanceVariables: #().

Metaclass FileSystemPermission >> new
[
self error: 'Should not be called. Use #posixPermission: instead'
]

Metaclass FileSystemPermission >> posixPermissions: aNumber
[
^ self basicNew	initialize: aNumber;	yourself
]


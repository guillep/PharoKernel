ZLibWriteStream
	superclass: #ZipWriteStream;
	package: #Compression.

ZLibWriteStream >> on: aCollectionOrStream
[
	super on: aCollectionOrStream.
	crc := 1
]

ZLibWriteStream >> updateCrc: adler from: start to: stop in: aCollection
[
	"Update crc using the Adler32 checksum technique from RFC1950"

	^ Adler32
		update: adler
		from: start
		to: stop
		in: aCollection
]

ZLibWriteStream >> writeFooter
[
	"Store the Adler32 checksum as the last 4 bytes."

	3 to: 0 by: -1 do: [ :i | encoder nextBytePut: (crc >> (i * 8) bitAnd: 255) ]
]

ZLibWriteStream >> writeHeader
[
	"Write header information"

	encoder nextBits: 8 put: 120.	"deflate method with 15bit window size"
	encoder nextBits: 8 put: 94	"checksum; no preset; fast (flevel=1) compression"
]


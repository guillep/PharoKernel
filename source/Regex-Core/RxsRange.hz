RxsRange
	superclass: #RxsNode;
	instanceVariables: #(#first #last );
	package: #'Regex-Core'.

RxsRange >> enumerateTo: aSet ignoringCase: aBoolean
[
	"Add all of the elements I represent to the collection."

	first asInteger to: last asInteger do: [ :charCode | | character |
		character := charCode asCharacter.
		aBoolean
			ifTrue: [ aSet
					add: character asUppercase;
					add: character asLowercase ]
			ifFalse: [ aSet add: character ] ]
]

RxsRange >> initializeFirst: aCharacter last: anotherCharacter
[
	first := aCharacter.
	last := anotherCharacter
]

RxsRange >> isEnumerable
[
	^ true
]

RxsRange class >> from: aCharacter to: anotherCharacter
[
	^ self new initializeFirst: aCharacter last: anotherCharacter
]

: aCharacter to: anotherCharacter
[from: aCharacter to: anotherCharacter
	^ self new initializeFirst: aCharacter last: anotherCharacter
]


RxCharSetParser
	instanceVariables: #(#source #lookahead #elements );
	package: #'Regex-Core'.

RxCharSetParser >> addChar: aChar
[
	elements add: (RxsCharacter with: aChar)
]

RxCharSetParser >> addRangeFrom: firstChar to: lastChar
[
	firstChar asInteger > lastChar asInteger
		ifTrue: [ RxParser signalSyntaxException: ' bad character range' at: source position ].
	elements add: (RxsRange from: firstChar to: lastChar)
]

RxCharSetParser >> initialize: aStream
[
	source := aStream.
	lookahead := aStream next.
	elements := OrderedCollection new
]

RxCharSetParser >> match: aCharacter
[
	aCharacter = lookahead
		ifFalse: [ RxParser signalSyntaxException: 'unexpected character: ' , (String with: lookahead) at: source position ].
	^ source atEnd
		ifTrue: [ lookahead := nil ]
		ifFalse: [ lookahead := source next ]
]

RxCharSetParser >> parse
[
	lookahead = $-
		ifTrue: [ self addChar: $-.
			self match: $- ].
	[ lookahead isNil ] whileFalse: [ self parseStep ].
	^ elements
]

RxCharSetParser >> parseCharOrRange
[
	| firstChar |
	firstChar := lookahead.
	self match: firstChar.
	lookahead = $-
		ifTrue: [ self match: $-.
			lookahead isNil
				ifTrue: [ ^ self
						addChar: firstChar;
						addChar: $- ]
				ifFalse: [ self addRangeFrom: firstChar to: lookahead.
					^ self match: lookahead ] ].
	self addChar: firstChar
]

RxCharSetParser >> parseEscapeChar
[
	self match: $\.
	$- = lookahead
		ifTrue: [ elements add: (RxsCharacter with: $-) ]
		ifFalse: [ elements add: (RxsPredicate forEscapedLetter: lookahead) ].
	self match: lookahead
]

RxCharSetParser >> parseNamedSet
[
	| name |
	self
		match: $[;
		match: $:.
	name := (String with: lookahead) , (source upTo: $:).
	lookahead := source next.
	self match: $].
	elements add: (RxsPredicate forNamedClass: name)
]

RxCharSetParser >> parseStep
[
	lookahead = $[
		ifTrue: [ source peek = $:
				ifTrue: [ ^ self parseNamedSet ]
				ifFalse: [ ^ self parseCharOrRange ] ].
	lookahead = $\
		ifTrue: [ ^ self parseEscapeChar ].
	lookahead = $-
		ifTrue: [ RxParser signalSyntaxException: 'invalid range' at: source position ].
	self parseCharOrRange
]

RxCharSetParser class >> on: aStream
[
	^ self new initialize: aStream
]


Announcer
	instanceVariables: #(#registry );
	package: #'Announcements-Core'.

Announcer >> announce: anAnnouncement
[
	| announcement |
	announcement := anAnnouncement asAnnouncement.
	registry ifNotNil: [ registry deliver: announcement ].
	^ announcement
]

Announcer >> basicSubscribe: subscription
[
	^ registry add: subscription
]

Announcer >> initialize
[
	super initialize.
	registry := SubscriptionRegistry new
]

Announcer >> numberOfSubscriptions
[
	^ registry numberOfSubscriptions
]

Announcer >> on: anAnnouncementClass do: aValuable
[
	"Declare that when anAnnouncementClass is raised, aValuable is executed."

	^ self subscribe: anAnnouncementClass do: aValuable
]

Announcer >> on: anAnnouncementClass send: aSelector to: anObject
[
	"Declare that when anAnnouncementClass is raised, anObject should receive the message aSelector."

	^ self subscribe: anAnnouncementClass send: aSelector to: anObject
]

Announcer >> removeSubscription: subscription
[
	"Remove the given subscription from the receiver"

	^ registry remove: subscription
]

Announcer >> replace: subscription with: newOne
[
	^ registry replace: subscription with: newOne
]

Announcer >> subscribe: anAnnouncementClass do: aValuable
[
	"Declare that when anAnnouncementClass is raised, aValuable is executed."

	^ registry
		add:
			(AnnouncementSubscription new
				announcer: self;
				announcementClass: anAnnouncementClass;
				valuable: aValuable)
]

Announcer >> subscribe: anAnnouncementClass send: aSelector to: anObject
[
	"Declare that when anAnnouncementClass is raised, anObject should receive the message aSelector."

	^ self subscribe: anAnnouncementClass do: (MessageSend receiver: anObject selector: aSelector)
]

Announcer >> unsubscribe: anObject
[
	"Unsubscribe all subscriptions of anObject from the receiver"

	registry removeSubscriber: anObject
]

Announcer >> weak
[
	"announcer weak subscribe: foo"

	^ WeakSubscriptionBuilder on: self
]

Announcer >> when: anAnnouncementClass do: aValuable
[
	"Declare that when anAnnouncementClass is raised, aValuable is executed."

	^ self subscribe: anAnnouncementClass do: aValuable
]


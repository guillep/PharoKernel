Class
	name: #FLObjectCluster;
	superclass: #ClassFLIteratingCluster;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #(#theClass );
	classVariables: #();
	package: #'Fuel-Clusters'.

Class FLObjectCluster >> clusterMaterializeStepWith: aDecoder
[
super clusterMaterializeStepWith: aDecoder.theClass := aDecoder nextEncodedReference
]

Class FLObjectCluster >> clusterReferencesDo: aBlock
[
aBlock value: theClass
]

Class FLObjectCluster >> clusterSerializeStepWith: anEncoder
[
super clusterSerializeStepWith: anEncoder.anEncoder encodeReferenceTo: theClass
]

Class FLObjectCluster >> initializeAnalyzing: aClass
[
self initializeAnalyzing.theClass := aClass
]

Class FLObjectCluster >> printNameOn: aStream
[
	"Append to the argument, aStream, a sequence of characters that  	identifies the receiver."
super printNameOn: aStream.aStream nextPut: $[.theClass printOn: aStream.aStream nextPut: $]
]

Class FLObjectCluster >> theClass
[
^ theClass
]

Metaclass
	name: #FLObjectCluster;
	instanceVariables: #().

Metaclass FLObjectCluster >> clusterBucketIn: aClusterization
[
^ aClusterization baselevelBucket
]

Metaclass FLObjectCluster >> newAnalyzing: aClass
[
^ self basicNew	initializeAnalyzing: aClass;	yourself
]


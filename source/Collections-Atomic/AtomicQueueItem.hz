AtomicQueueItem
	instanceVariables: #(#next #object );
	package: #'Collections-Atomic'.

AtomicQueueItem >> initialize
[
	"make circular"

	super initialize.
	next := self
]

AtomicQueueItem >> isCircular
[
	^ next == self
]

AtomicQueueItem >> makeCircular
[
	"Make a receiver circular, i.e. point to itself,
	answer the old value of next variable. 
	Note, this operation should be atomic"

	| temp |
	" atomic swap here"
	temp := next.
	next := self.
	^ temp
]

AtomicQueueItem >> next
[
	"Answer the value of next"

	^ next
]

AtomicQueueItem >> next: anObject
[
	"Set the value of next"

	next := anObject
]

AtomicQueueItem >> object
[
	"Answer the value of object"

	^ object
]

AtomicQueueItem >> object: anObject
[
	"Set the value of object"

	object := anObject
]

ct
[object: anObject
	"Set the value of object"

	object := anObject
]


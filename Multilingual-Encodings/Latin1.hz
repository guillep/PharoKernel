Class
	name: #Latin1;
	superclass: #ClassEncodedCharSet;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #();
	classVariables: #();
	package: #'Multilingual-Encodings'.

Metaclass
	name: #Latin1;
	instanceVariables: #(#rightHalfSequence ).

Metaclass Latin1 >> nextPutValue: ascii toStream: aStream withShiftSequenceIfNeededForTextConverterState: state
[
(ascii <= 127 and: [ state g0Leading ~= 0 ])	ifTrue: [ 		state charSize: 1.		state g0Leading: 0.		state g0Size: 1.		aStream basicNextPutAll: compoundTextSequence.		aStream basicNextPut: (Character value: ascii).		^ self ].((128 <= ascii and: [ ascii <= 255 ]) and: [ state g1Leading ~= 0 ])	ifTrue: [ ^ self nextPutRightHalfValue: ascii toStream: aStream withShiftSequenceIfNeededForTextConverterState: state ].aStream basicNextPut: (Character value: ascii).^ self
]

Metaclass Latin1 >> initialize
[
	"	self initialize"
compoundTextSequence := String	streamContents: [ :s | 		s nextPut: (Character value: 27).		s nextPut: $(.		s nextPut: $B ].rightHalfSequence := String	streamContents: [ :s | 		s nextPut: (Character value: 27).		s nextPut: $-.		s nextPut: $A ]
]

Metaclass Latin1 >> nextPutRightHalfValue: ascii toStream: aStream withShiftSequenceIfNeededForTextConverterState: state
[
state charSize: 1.state g1Leading: 0.state g1Size: 1.aStream basicNextPutAll: rightHalfSequence.aStream basicNextPut: (Character value: ascii)
]

Metaclass Latin1 >> isLetter: char
[
	"Answer whether the receiver is a letter."
^ Unicode isLetter: char
]

Metaclass Latin1 >> printingDirection
[
^ #right
]

Metaclass Latin1 >> isBreakableAt: index in: text
[
| char |char := text at: index.char = Character space	ifTrue: [ ^ true ].char = Character cr	ifTrue: [ ^ true ].char = Character lf	ifTrue: [ ^ true ].^ false
]

Metaclass Latin1 >> emitSequenceToResetStateIfNeededOn: aStream forState: state
[
state g0Leading ~= 0	ifTrue: [ 		state charSize: 1.		state g0Leading: 0.		state g0Size: 1.		aStream basicNextPutAll: compoundTextSequence ]	"Actually, G1 state should go back to ISO-8859-1, too."
]

Metaclass Latin1 >> leadingChar
[
^ 0
]


Class	name: #WeakIdentityKeyDictionary;	superclass: #ClassWeakKeyDictionary;	instanceSpecification: #(#pointers #words );	instanceVariables: #();	classVariables: #();	package: #'Collections-Weak'.Class WeakIdentityKeyDictionary >> scanForEmptySlotFor: aKey[	"Scan the key array for the first slot containing an empty slot (indicated by a nil). Answer the index of that slot. This method will be overridden in various subclasses that have different interpretations for matching elements."| index start |index := start := aKey identityHash \\ array size + 1.[ (array at: index) ifNil: [ ^ index ].(index := index \\ array size + 1) = start ] whileFalse.self errorNoFreeSpace]Class WeakIdentityKeyDictionary >> startIndexFor: anObject[	"Return the index at which the scan for anObject should start."^ anObject identityHash \\ array size + 1]Class WeakIdentityKeyDictionary >> compare: object1 to: object2[^ object1 == object2]Metaclass	name: #WeakIdentityKeyDictionary;	instanceVariables: #().